<?xml version="1.0" encoding="UTF-8"?>
<!--
 If not stated otherwise in this file or this component's Licenses.txt file the
 following copyright and licenses apply:

 Copyright 2021 RDK Management

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<!DOCTYPE parserConfig [
<!ENTITY TDK_LOC          "/opt/TDK/">
<!ENTITY APP_LOG_FILE     "performance.log">
<!ENTITY APP_LOG_PATH     "&TDK_LOC;logs/">
<!ENTITY STRESSNG_REPORT "/tmp/stressng-report.txt">
]>
<parserConfig>
    <tdkTestUtility name="TinymemBench">
        <parser_section>
            <log_file_path>&APP_LOG_PATH;&APP_LOG_FILE;</log_file_path>
            <parser_info>
                <tag>standard memcpy</tag>
                <cmd>awk '/standard memcpy/{print}' &APP_LOG_PATH;&APP_LOG_FILE; | tr -s ' ' | cut -d ':' -f 2 | sed 's/^ //'</cmd>
            </parser_info>
            <parser_info>
                <tag>standard memset</tag>
                <cmd>awk '/standard memset/{print}' &APP_LOG_PATH;&APP_LOG_FILE; | tr -s ' ' | cut -d ':' -f 2 | sed 's/^ //'</cmd>
            </parser_info>
        </parser_section>
    </tdkTestUtility>

    <tdkTestUtility name="NBench">
        <parser_section>
            <log_file_path>&APP_LOG_PATH;&APP_LOG_FILE;</log_file_path>
            <parser_info>
                <tag>MEMORY INDEX</tag>
                <cmd>awk '/LINUX DATA BELOW/,0' &APP_LOG_PATH;&APP_LOG_FILE; | awk '/^MEMORY INDEX/{print}' | tr -s ' ' | cut -d ':' -f 2 | sed 's/^ //'</cmd>
            </parser_info>
            <parser_info>
                <tag>INTEGER INDEX</tag>
                <cmd>awk '/LINUX DATA BELOW/,0' &APP_LOG_PATH;&APP_LOG_FILE; | awk '/^INTEGER INDEX/{print}' | tr -s ' ' | cut -d ':' -f 2 | sed 's/^ //'</cmd>
            </parser_info>
            <parser_info>
                <tag>FLOATING-POINT INDEX</tag>
                <cmd>awk '/LINUX DATA BELOW/,0' &APP_LOG_PATH;&APP_LOG_FILE; | awk '/^FLOATING-POINT INDEX/{print}' | tr -s ' ' | cut -d ':' -f 2 | sed 's/^ //'</cmd>
            </parser_info>
        </parser_section>
    </tdkTestUtility>

    <tdkTestUtility name="Iozone">
        <parser_section>
            <log_file_path>&APP_LOG_PATH;&APP_LOG_FILE;</log_file_path>
            <parser_info>
                <tag>64_64_write</tag>
                <cmd>cat &APP_LOG_PATH;&APP_LOG_FILE; | tr -s " " | grep "64 64" | awk  '{print $3}'</cmd>
            </parser_info>
            <parser_info>
                <tag>64_64_rewrite</tag>
                <cmd>cat &APP_LOG_PATH;&APP_LOG_FILE; | tr -s " " | grep "64 64" | awk  '{print $4}'</cmd>
            </parser_info>
             <parser_info>
                <tag>64_64_read</tag>
                <cmd>cat &APP_LOG_PATH;&APP_LOG_FILE; | tr -s " " | grep "64 64" | awk  '{print $5}'</cmd>
             </parser_info>
             <parser_info>
                <tag>64_64_reread</tag>
                <cmd>cat &APP_LOG_PATH;&APP_LOG_FILE; | tr -s " " | grep "64 64" | awk  '{print $6}'</cmd>
             </parser_info>
             <parser_info>
                <tag>64_64_randomread</tag>
                <cmd>cat &APP_LOG_PATH;&APP_LOG_FILE; | tr -s " " | grep "64 64" | awk  '{print $7}'</cmd>
             </parser_info>
             <parser_info>
                <tag>64_64_randomwrite</tag>
                <cmd>cat &APP_LOG_PATH;&APP_LOG_FILE; | tr -s " " | grep "64 64" | awk  '{print $8}'</cmd>
             </parser_info>
             <parser_info>
                <tag>64_64_bkwdread</tag>
                <cmd>cat &APP_LOG_PATH;&APP_LOG_FILE; | tr -s " " | grep "64 64" | awk  '{print $9}'</cmd>
             </parser_info>
             <parser_info>
                <tag>64_64_recordrewrite</tag>
                <cmd>cat &APP_LOG_PATH;&APP_LOG_FILE; | tr -s " " | grep "64 64" | awk  '{print $10}'</cmd>
             </parser_info>
             <parser_info>
                <tag>64_64_strideread</tag>
                <cmd>cat &APP_LOG_PATH;&APP_LOG_FILE; | tr -s " " | grep "64 64" | awk  '{print $11}'</cmd>
             </parser_info>
             <parser_info>
                <tag>64_64_fwrite</tag>
                <cmd>cat &APP_LOG_PATH;&APP_LOG_FILE; | tr -s " " | grep "64 64" | awk  '{print $12}'</cmd>
             </parser_info>
             <parser_info>
                <tag>64_64_frewrite</tag>
                <cmd>cat &APP_LOG_PATH;&APP_LOG_FILE; | tr -s " " | grep "64 64" | awk  '{print $13}'</cmd>
             </parser_info>
             <parser_info>
                <tag>64_64_fread</tag>
                <cmd>cat &APP_LOG_PATH;&APP_LOG_FILE; | tr -s " " | grep "64 64" | awk  '{print $14}'</cmd>
             </parser_info>
             <parser_info>
                <tag>64_64_freread</tag>
                <cmd>cat &APP_LOG_PATH;&APP_LOG_FILE; | tr -s " " | grep "64 64" | awk  '{print $15}'</cmd>
             </parser_info>
        </parser_section>
    </tdkTestUtility>

    <tdkTestUtility name="sysbench_memory_metric">
        <parser_section>
            <log_file_path>&APP_LOG_PATH;&APP_LOG_FILE;</log_file_path>
            <parser_info>
                <tag>Data transfered in second </tag>
                <cmd>awk '/transferred / {print}' &APP_LOG_PATH;&APP_LOG_FILE; | cut -d "(" -f2 | cut -d " " -f1</cmd>
            </parser_info>
        </parser_section>
    </tdkTestUtility>

    <tdkTestUtility name="sysbench_cpu_metric">
        <parser_section>
            <log_file_path>&APP_LOG_PATH;&APP_LOG_FILE;</log_file_path>
            <parser_info>
                <tag>Total time</tag>
                <cmd>awk '/total time:/ {print}' &APP_LOG_PATH;&APP_LOG_FILE; | tr -s " " | awk '{print $3}' | sed 's/[a-z]//'</cmd>
            </parser_info>
        </parser_section>
    </tdkTestUtility>

    <tdkTestUtility name="stress-ng_CPU_Stress">
        <parser_section>
            <log_file_path>&STRESSNG_REPORT;</log_file_path>
            <parser_info>
                <tag>CPU Stress in bogo ops/s</tag>
                <cmd>cat  &STRESSNG_REPORT; | tr -s " " | awk '/info: \[.+\] cpu/' | awk  '{print $9}'</cmd>
            </parser_info>
        </parser_section>
    </tdkTestUtility>

    <tdkTestUtility name="stress-ng_Memory_Copying">
        <parser_section>
            <log_file_path>&STRESSNG_REPORT;</log_file_path>
            <parser_info>
                <tag>Memcpy Stress in bogo ops/s</tag>
                <cmd>cat &STRESSNG_REPORT;| tr -s " " | awk '/info: \[.+\] memcpy/' | awk  '{print $9}'</cmd>
            </parser_info>
        </parser_section>
    </tdkTestUtility>

    <tdkTestUtility name="stress-ng_Context_Switching">
        <parser_section>
            <log_file_path>&STRESSNG_REPORT;</log_file_path>
            <parser_info>
                <tag>Context Switch Stress in bogo ops/s</tag>
                <cmd>cat &STRESSNG_REPORT;| tr -s " " | awk '/info: \[.+\] switch/' | awk  '{print $9}'</cmd>
            </parser_info>
        </parser_section>
    </tdkTestUtility>

    <tdkTestUtility name="stress-ng_Malloc">
        <parser_section>
            <log_file_path>&STRESSNG_REPORT;</log_file_path>
            <parser_info>
                <tag>Malloc Stress in bogo ops/s</tag>
                <cmd>cat &STRESSNG_REPORT;| tr -s " " | awk '/info: \[.+\] malloc/' | awk  '{print $9}'</cmd>
            </parser_info>
        </parser_section>
    </tdkTestUtility>

</parserConfig>
