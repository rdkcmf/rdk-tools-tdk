##########################################################################
# If not stated otherwise in this file or this component's Licenses.txt
# file the following copyright and licenses apply:
#
# Copyright 2016 RDK Management
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##########################################################################

#This python script is autogenerated by parsing the original scripts imported from the Database
#This script is supposed to be called from the genericscript.py 
#TODO:replace this caling script name with correct one


'''
<?xml version='1.0' encoding='utf-8'?>
<xml>
  <id>532</id>
  <!-- Do not edit id. This will be auto filled while exporting. If you are adding a new script keep the id empty -->
  <version>1</version>
  <!-- Do not edit version. This will be auto incremented while updating. If you are adding a new script you can keep the vresion as 1 -->
  <name>RDKLogger_Dbg_Enabled_Status</name>
  <!-- If you are adding a new script you can specify the script name. -->
  <primitive_test_id>401</primitive_test_id>
  <!-- Do not change primitive_test_id if you are editing an existing script. -->
  <primitive_test_name>RDKLogger_Dbg_Enabled_Status</primitive_test_name>
  <!--  -->
  <primitive_test_version>1</primitive_test_version>
  <!--  -->
  <status>ALLOCATED</status>
  <!--  -->
  <synopsis>This tests the debug enabled status functionality of RDK Logger.
Test Case ID: CT_RDKLogger_03
Test Type: Positive</synopsis>
  <!--  -->
  <groups_id />
  <!--  -->
  <execution_time>5</execution_time>
  <!--  -->
  <long_duration>false</long_duration>
  <!-- execution_time is the time out time for test execution -->
  <remarks></remarks>
  <!-- Reason for skipping the tests if marked to skip -->
  <skip>false</skip>
  <!--  -->
  <box_types>
    <box_type>Hybrid-1</box_type>
    <!--  -->
    <box_type>IPClient-3</box_type>
    <!--  -->
  </box_types>
  <rdk_versions>
    <rdk_version>RDK2.0</rdk_version>
    <!--  -->
    <rdk_version>RDK1.3</rdk_version>
    <!--  -->
  </rdk_versions>
</xml>

'''
#TODO: validate which imports are necessary and remove others
import sys;
from time import gmtime, strftime;
import tdklib;
import time;
import datalib;
import numpy as np;





#Get the result of connection with test component and STB
def executeTests(obj):
	
	result =obj.getLoadModuleResult();
	print "[LIB LOAD STATUS]  :  %s" %result;
	
	print "rdklogger module loading status :%s" %result;
	
	#Check for SUCCESS/FAILURE of rdklogger module
	if "SUCCESS" in result.upper():
	    #Set the module loading status
	    obj.setLoadModuleStatus("SUCCESS");
	
	    #Prmitive test case which associated to this Script
	    tdkTestObj = obj.createTestStep('RDKLogger_Dbg_Enabled_Status',5);
	
	    expectedRes = "SUCCESS"
	    module = "TEST1"
	    print "Requested module: %s"%module
	    tdkTestObj.addParameter("module",module);
	    level = "ERROR"
	    print "Requested level: %s"%level
	    tdkTestObj.addParameter("level",level);
	
	    #Execute the test case in STB
	    tdkTestObj.executeTestCase(expectedRes);
	
	    #Get the result of execution
	    result = tdkTestObj.getResult();
	    print "[TEST EXECUTION RESULT] : %s" %result;
	    details = tdkTestObj.getResultDetails();
	    if "SUCCESS" in result.upper():
	        #Set the result status of execution
	        tdkTestObj.setResultStatus("SUCCESS");
	        print "rdklogger dbg enabled status Successful: [%s]" %details;
	    else:
	         tdkTestObj.setResultStatus("FAILURE");
	         print "rdklogger dbg enabled status Failed: [%s]"%details;
	
	    #unloading rdklogger module
	    obj.unloadModule("rdklogger");
	else:
	    print "Failed to load rdklogger module";
	    #Set the module loading status
	    obj.setLoadModuleStatus("FAILURE");
