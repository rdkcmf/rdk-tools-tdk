<?xml version="1.0" encoding="UTF-8"?>
<!--
 If not stated otherwise in this file or this component's Licenses.txt file the
 following copyright and licenses apply:
 Copyright 2020 RDK Management
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<testPlugin pluginName="StateObserver" pluginVersion="1">
    <pluginPreRequisite>
      <prerequisite requisiteId="1" requisiteName="Activate_Plugins">
        <testStep testStepId="1" name="Check_PluginActive_Status" method="Get_Plugin_Status" saveResult="true" pluginName="Controller">
            <params>
              <param tag="plugin" value="com.comcast.StateObserver" indexOnly="true" />
            </params>
            <resultGeneration useMethodTag="controller_get_plugin_state" arguments="check_status,com.comcast.StateObserver" />
        </testStep>
        <testStep testStepId="2" name="Activate_Plugin" method="Activate_Plugin"  pluginName="Controller" >
            <conditionalExecution enable="true" Id="1" useMethodTag="controller_get_plugin_state" arguments="isDeactivated,com.comcast.StateObserver" />
            <params>
              <param tag="callsign" value="com.comcast.StateObserver" />
            </params>
        </testStep>
        <testStep testStepId="3" name="Check_PluginActive_Status" method="Get_Plugin_Status" pluginName="Controller"  >
            <conditionalExecution enable="true" Id="1" useMethodTag="controller_get_plugin_state" arguments="isDeactivated,com.comcast.StateObserver" />
            <params>
              <param tag="plugin" value="com.comcast.StateObserver" indexOnly="true" />
            </params>
            <resultGeneration useMethodTag="controller_get_plugin_state" arguments="check_status,com.comcast.StateObserver" expectedValues="activated"/>
        </testStep>
      </prerequisite>
    </pluginPreRequisite>


    <!-- Test case 01 -->
    <testCase testCaseId="StateObserver_01" testCaseName= "StateObserver_SetAndGet_Api_Version_Number" desc="Get API Version number">
        <testCaseInfo testCaseType="setandget" revert="true" />
        <testStep testStepId="1" name="GetApiVersionNumber" method="GetApiVersionNumber" saveResult="true" revertGet="yes">
            <resultGeneration useMethodTag="StateObserver_validate_version" />
        </testStep>
        <testStep testStepId="2" name="SetApiVersionNumber" method="SetApiVersionNumber" revertSet="yes">
            <params>
                <param tag="version" usePreviousResult="true" Id="1" useMethodTag="StateObserver_change_version" revertParam="yes" />
            </params>
            <resultGeneration useMethodTag="StateObserver_validate_result" />
        </testStep>
        <testStep testStepId="3" name="GetApiVersionNumber" method="GetApiVersionNumber" revertFlag="yes">
            <resultGeneration useMethodTag="StateObserver_validate_version" arguments="check_version" >
              <expectedValues usePreviousResult="true" Id="1" useMethodTag="StateObserver_change_version" />
            </resultGeneration>
        </testStep>
    </testCase>


    <!-- Test case 02 -->
    <testCase testCaseId="StateObserver_02" testCaseName= "StateObserver_Get_Name" desc="Get plugin name">
        <testCaseInfo testCaseType="direct"/>
        <testStep testStepId="1" name="GetName" method="GetName">
            <resultGeneration useMethodTag="StateObserver_validate_name" expectedValues="StateObserver"/>
        </testStep>
    </testCase>

    <!-- Test case 03 -->
    <testCase testCaseId="StateObserver_03" testCaseName="StateObserver_Get_Values" desc="Get properties value and error">
        <testCaseInfo testCaseType="direct"/>
        <testStep testStepId="1" name="Get_Property_Values" method="GetValues">
          <params>
            <param tag="PropertyNames" useConfigFile="true" key="STATEOBSERVER_INPUT_PROPERTIES" />
          </params>
          <resultGeneration useMethodTag="StateObserver_get_property_info" />
        </testStep>
    </testCase>

    <!-- Test case 04 -->
    <testCase testCaseId="StateObserver_04" testCaseName="StateObserver_Register_Unregister_Listeners" desc="Registers and unregisters listeners for properties">
        <testCaseInfo testCaseType="direct"/>
        <testStep testStepId="1" name="Register_Listeners" method="RegisterListeners">
          <params>
            <param tag="PropertyNames" useConfigFile="true" key="STATEOBSERVER_INPUT_PROPERTIES" />
          </params>
          <resultGeneration useMethodTag="StateObserver_get_property_info" />
        </testStep>
        <testStep testStepId="2" name="Unegister_Listeners" method="UnregisterListeners">
          <params>
            <param tag="PropertyNames" useConfigFile="true" key="STATEOBSERVER_INPUT_PROPERTIES" />
          </params>
          <resultGeneration useMethodTag="StateObserver_validate_result" />
        </testStep>
    </testCase>

    <!-- Test case 05 -->
    <testCase testCaseId="StateObserver_05" testCaseName="StateObserver_Get_Registered_Property_Names" desc="Returns an array of all properties, which has active listeners">
        <testCaseInfo testCaseType="direct"/>
        <testStep testStepId="1" name="Register_Listeners" method="RegisterListeners">
          <params>
            <param tag="PropertyNames" useConfigFile="true" key="STATEOBSERVER_INPUT_PROPERTIES" />
          </params>
          <resultGeneration useMethodTag="StateObserver_get_property_info" />
        </testStep>
        <testStep testStepId="2" name="GetRegisteredPropertyNames" method="GetRegisteredPropertyNames">
            <resultGeneration useMethodTag="stateobserver_check_registered_property_names">
                <expectedValues useConfigFile="true" key="STATEOBSERVER_INPUT_PROPERTIES" />
            </resultGeneration>
        </testStep>
        <testStep testStepId="3" name="Unegister_Listeners" method="UnregisterListeners">
          <params>
            <param tag="PropertyNames" useConfigFile="true" key="STATEOBSERVER_INPUT_PROPERTIES" />
          </params>
          <resultGeneration useMethodTag="StateObserver_validate_result" />
        </testStep>
    </testCase>
</testPlugin>

