<?xml version="1.0" encoding="UTF-8"?>
<!--
 If not stated otherwise in this file or this component's Licenses.txt file the
 following copyright and licenses apply:
 Copyright 2020 RDK Management
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<testPlugin pluginName="DisplaySettings" pluginVersion="1">

        <pluginPreRequisite>
          <prerequisite requisiteId="1" requisiteName="Activate_Plugins">
            <testStep testStepId="1" name="Check_PluginActive_Status" method="Get_Plugin_Status" saveResult="true" pluginName="Controller">
                <params>
                  <param tag="plugin" value="org.rdk.DisplaySettings" indexOnly="true" />
                </params>
                <resultGeneration useMethodTag="controller_get_plugin_state" arguments="check_status,org.rdk.DisplaySettings" />
            </testStep>
            <testStep testStepId="2" name="Activate_Plugin" method="Activate_Plugin"  pluginName="Controller" >
                <conditionalExecution enable="true" Id="1" useMethodTag="controller_get_plugin_state" arguments="isDeactivated,org.rdk.DisplaySettings" />
                <params>
                  <param tag="callsign" value="org.rdk.DisplaySettings" />
                </params>
            </testStep>
            <testStep testStepId="3" name="Check_PluginActive_Status" method="Get_Plugin_Status" pluginName="Controller"  >
                <conditionalExecution enable="true" Id="1" useMethodTag="controller_get_plugin_state" arguments="isDeactivated,org.rdk.DisplaySettings" />
                <params>
                  <param tag="plugin" value="org.rdk.DisplaySettings" indexOnly="true" />
                </params>
                <resultGeneration useMethodTag="controller_get_plugin_state" arguments="check_status,org.rdk.DisplaySettings" expectedValues="activated"/>
            </testStep>
          </prerequisite>
          <prerequisite requisiteId="2" requisiteName="Register_And_Listen_Events" type="eventRegister" >
            <event pluginName="DisplaySettings" eventName="Event_Zoom_Settings_Updated" />
          </prerequisite>
        </pluginPreRequisite>
       
        <testCase testCaseId="DS_01" testCaseName= "Check_Settop_Supported_Resolutions" desc="Check whether settop displays all supported resoltions">
            <testCaseInfo testCaseType="direct"/>
            <testStep testStepId="1" name="Get_Settop_Supported_Resolutions" method="Get_Supported_Settop_Resolutions">
                <resultGeneration useMethodTag="check_settop_supported_resolutions">
                  <expectedValues useConfigFile="true" key="SETTOP_SUPPORTED_RESOLUTIONS" />
                </resultGeneration>
            </testStep>
        </testCase>
        
        <testCase testCaseId="DS_02" testCaseName= "Check_Supported_Tv_Resolutions"  desc="Check whether settop displays supported TV resoltions">
            <testCaseInfo testCaseType="direct"/>
            <testStep testStepId="1" name="Check_Display_Connected_Status" method="Get_Connected_VideoDisplays" saveResult="true" >
                  <resultGeneration useMethodTag="display_connected_status" />
                </testStep>
            <testStep testStepId="2" name="Get_Supported_Tv_Resolutions" method="Get_Supported_Tv_Resolutions" >
                  <params>
                    <param tag="videoDisplay" usePreviousResult="true" Id="1" useMethodTag="set_video_display" />
                  </params>
                <resultGeneration useMethodTag="check_supported_tv_resolutions"/>
            </testStep>
        </testCase>
        <testCase testCaseId="DS_03" testCaseName= "Check_Supported_Video_Displays" desc="Check whether settop displays supported video displays">
            <testCaseInfo testCaseType="direct"/>
            <testStep testStepId="1" name="Get_Supported_Video_Displays" method="Get_Supported_VideoDisplays">
                <resultGeneration useMethodTag="check_supported_video_displays">
                  <expectedValues useConfigFile="true" key="SUPPORTED_VIDEO_DISPLAYS" />
                </resultGeneration>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_04" testCaseName= "Check_Supported_Audio_Ports" desc="Check whether settop lists supported audio ports">
            <testCaseInfo testCaseType="direct"/>
            <testStep testStepId="1" name="Get_Supported_Audio_Ports" method="Get_Supported_AudioPorts">
                <resultGeneration useMethodTag="check_supported_audio_ports">
                  <expectedValues useConfigFile="true" key="SUPPORTED_AUDIO_PORTS" />
                </resultGeneration>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_05" testCaseName= "Check_Settop_HDR_Support" desc="Check whether settop has HDR support or not">
            <testCaseInfo testCaseType="direct"/>
            <testStep testStepId="1" name="Get_Settop_HDR_Support_Details" method="GetSettopHDRSupport">
                <resultGeneration useMethodTag="check_settop_HDR_support">
                  <expectedValues useConfigFile="true" key="HDR_SUPPORT" />
                </resultGeneration>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_06" testCaseName= "Check_TV_HDR_Support" desc="Check whether TV has HDR support or not">
            <testCaseInfo testCaseType="direct"/>
            <testCasePreRequisite>
                <prerequisite requisiteId="1" requisiteName="Get_Display_Connected_Status">
                <testStep testStepId="1" name="Check_Display_Connected_Status" method="Get_Connected_VideoDisplays" >
                  <resultGeneration useMethodTag="display_connected_status" />
                </testStep>
                </prerequisite>
            </testCasePreRequisite>

            <testStep testStepId="1" name="Get_TV_HDR_Support_Details" method="Get_Tv_HDR_Support">
                <resultGeneration useMethodTag="check_TV_HDR_support"/>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_07" testCaseName= "Read_Host_EDID" desc="Check the EDID status of host">
            <testCaseInfo testCaseType="direct"/>
            <testStep testStepId="1" name="Get_Host_EDID_Details" method="Read_Host_EDID">
                <resultGeneration useMethodTag="check_host_edid"/>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_08" testCaseName= "Read_Connected_Device_EDID" desc="Check the EDID status of connected device">
            <testCaseInfo testCaseType="direct"/>
            <testCasePreRequisite>
                <prerequisite requisiteId="1" requisiteName="Get_Display_Connected_Status">
                <testStep testStepId="1" name="Check_Display_Connected_Status" method="Get_Connected_VideoDisplays" >
                  <resultGeneration useMethodTag="display_connected_status" />
                </testStep>
                </prerequisite>
            </testCasePreRequisite>
            <testStep testStepId="1" name="Get_Connected_Device__EDID_Details" method="Read_EDID">
                <resultGeneration useMethodTag="check_connected_device_edid"/>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_09" testCaseName= "Set_And_Get_Supported_Audio_Modes_HDMI0"  desc="Check whether supported audio modes are able to set HDMI0 port">
            <testCaseInfo testCaseType="loop" revert="true" configurableTest="true" testKey="CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="HDMI0"/>
            <testStep testStepId="1" name="Check_Display_Connected_Status" method="Get_Connected_VideoDisplays" >
                  <resultGeneration useMethodTag="display_connected_status" />
                </testStep>
            <testStep testStepId="2" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="HDMI0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="3" name="Get_Supported_Audio_Modes" method="Get_Supported_AudioModes" saveResult="true">
                  <params>
                    <param tag="audioPort" value="HDMI0"/>
                  </params>
                <resultGeneration useMethodTag="check_supported_audio_modes"/>
            </testStep>
            <testStep testStepId="4" name="Get_Sound_Mode" method="Get_Sound_Mode" saveResult="true" revertGet="yes">
                  <params>
                    <param tag="audioPort" value="HDMI0" />
                  </params>
                <resultGeneration useMethodTag="check_sound_mode"/>
            </testStep>
            <testStep testStepId="5"  name="Set_Sound_Mode" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Sound_Mode" method="Set_Sound_Mode" revertSet="yes">
                  <params>
                    <param tag="audioPort"  value="HDMI0" />
                    <param tag="soundMode" usePreviousResult="true" Id="3" useMethodTag="get_supported_sound_modes" iteration="true" revertParam="yes" />
                    <param tag="persist" value="false" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Sound_Mode" method="Get_Sound_Mode" revertFlag="yes">
                  <params>
                    <param tag="audioPort" value="HDMI0" />
                  </params>
                  <resultGeneration useMethodTag="check_sound_mode" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_10" testCaseName= "Set_And_Get_Zoom_Settings"  desc="Check whether supported zoom modes are able to set and get">
            <testCaseInfo testCaseType="loop" revert="true"/>
            <testStep testStepId="1" name="Get_Zoom_Setting" method="Get_Zoom_Setting" saveResult="true" revertGet="yes" >
              <resultGeneration useMethodTag="check_zoom_settings" >
                <expectedValues useConfigFile="true" key="ZOOM_SETTINGS" />
              </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Set_Zoom_Setting" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Zoom_Setting" method="Set_Zoom_Setting" revertSet="yes">
                  <params>
                    <param tag="zoomSetting" useConfigFile="true" key="ZOOM_SETTINGS" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Zoom_Setting" method="Get_Zoom_Setting" revertFlag="yes" >
                  <resultGeneration useMethodTag="check_zoom_settings" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
              <subtestStep subtestStepId="3" name="Check_Zoom_Settings_Updated_Change_Event" event="Event_Zoom_Settings_Updated" action="eventListener" delay="3" >
                  <resultGeneration useMethodTag="displaysettings_check_zoom_settings_updated_event" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_11" testCaseName= "Set_And_Get_VideoPort_Status_InStandby" desc="Check whether video port status to be used in stand by mode is able to set and get" >
            <testCaseInfo testCaseType="loop" revert="true" />
            <testStep testStepId="1" name="Check_Display_Connected_Status" method="Get_Connected_VideoDisplays" saveResult="true" >
                  <resultGeneration useMethodTag="display_connected_status" />
            </testStep>
            <testStep testStepId="2" name="Get_VideoPort_Status_InStandby"  method="Get_VideoPort_Status_InStandby" saveResult="true" revertGet="yes" >
                <params>
                  <param tag="portName" usePreviousResult="true" Id="1" useMethodTag="set_video_display" />
                </params>
              <resultGeneration useMethodTag="check_video_port_status_standby" />
            </testStep>
            <testStep testStepId="3" name="Set_VideoPort_Status_InStandby"  testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_VideoPort_Status_InStandby" method="Set_VideoPort_Status_InStandby" revertSet="yes">
                  <params>
                    <param tag="portName" usePreviousResult="true" Id="1" useMethodTag="set_video_display" />
                    <param tag="enabled" value="True,False" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" /> 
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_VideoPort_Status_InStandby"  method="Get_VideoPort_Status_InStandby" revertFlag="yes" >
                  <params>
                    <param tag="portName" usePreviousResult="true" Id="1" useMethodTag="set_video_display" />
                  </params>
                  <resultGeneration useMethodTag="check_video_port_status_standby" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_12" testCaseName= "Set_And_Get_MS12_Audio_Compression" desc="Check whether MS12 audio compression values are able to set and get" >
            <testCaseInfo testCaseType="loop" revert="true" configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES" useMethodTag="displaysetting_check_feature_applicability" arguments="AudioCompression" />
            <testStep testStepId="1" name="Get_MS12_Audio_Compression" method="Get_MS12_Audio_Compression" saveResult="true" revertGet="yes" >
              <resultGeneration useMethodTag="check_MS12_audio_compression" />
            </testStep>
            <testStep testStepId="2" name="Set_MS12_Audio_Compression" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_MS12_Audio_Compression" method="Set_MS12_Audio_Compression" revertSet="yes">
                  <params>
                    <param tag="compresionLevel" value="0,5,10" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_MS12_Audio_Compression" method="Get_MS12_Audio_Compression" revertFlag="yes" >
                  <resultGeneration useMethodTag="check_MS12_audio_compression" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>              

        <testCase testCaseId="DS_13" testCaseName= "Check_Current_Output_Settings" desc="Check the current output settings of device">
            <testCaseInfo testCaseType="direct"/>
            <testStep testStepId="1" name="Check_Current_Output_Settings" method="Get_Current_Output_Settings">
                <resultGeneration useMethodTag="check_current_output_settings"/>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_14" testCaseName= "Check_Active_Input_Value" desc="Check the active input value ">
            <testCaseInfo testCaseType="direct"/>
            <testStep testStepId="1" name="Check_Display_Connected_Status" method="Get_Connected_VideoDisplays" saveResult="true" >
                  <resultGeneration useMethodTag="display_connected_status" />
            </testStep>
            <testStep testStepId="2" name="Check_Get_Active_Input" method="Get_Active_Input">
                <resultGeneration useMethodTag="check_active_input"/>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_15" testCaseName= "SetAndGet_All_Supported_Resolutions" desc="Set and get all the supported resolution by both TV and STB">
            <testCaseInfo testCaseType="loop" revert="true" />
            <testStep testStepId="1" name="Check_Display_Connected_Status" method="Get_Connected_VideoDisplays" saveResult="true">
                <resultGeneration useMethodTag="display_connected_status"/>
            </testStep>
            <testStep testStepId="2" name="Get_Supported_Resolutions" method="Get_Supported_Resolutions" saveResult="true">
                <params>
                  <param tag="videoDisplay" usePreviousResult="true" Id="1" useMethodTag="set_video_display"/>
                </params>
                <resultGeneration useMethodTag="display_supported_resolutions"/>
            </testStep>
            <testStep testStepId="3" name="Get_Current_Resolution"  method="Get_Current_Resolution" saveResult="true" revertGet="yes">
                <params>
                  <param tag="videoDisplay" usePreviousResult="true" Id="1" useMethodTag="set_video_display"/>
                </params>
                <resultGeneration useMethodTag="check_current_resolution"/>
            </testStep>
            <testStep testStepId="4" name="Set_Resolution" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Resolution" method="Set_Current_Resolution" revertSet="yes">
                  <params>
                  <param tag="videoDisplay" usePreviousResult="true" Id="1" useMethodTag="set_video_display"/>
                  <param tag="resolution" usePreviousResult="true" Id="2" iteration="true" useMethodTag="get_supported_resolutions" revertParam="yes"/>
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Current_Resolution"  method="Get_Current_Resolution" revertFlag="yes" >
                  <resultGeneration useMethodTag="check_current_resolution" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_16" testCaseName= "Enable_And_Disable_Dolby_Volume_Mode"  desc="Check whether dolby volume mode can enable and disable ">
            <testCaseInfo testCaseType="loop" revert="true" configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES" useMethodTag="displaysetting_check_feature_applicability" arguments="DolbyVolume"/>
            <testStep testStepId="1" name="Get_Dolby_Volume_Mode" method="Get_Dolby_Volume_Mode" saveResult="true" revertGet="yes" >
              <resultGeneration useMethodTag="check_dolby_volume_mode" >
              </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Enable_And_Disable_Dolby_Volume_Mode" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Enable_Dolby_Volume_Mode" method="Set_Dolby_Volume_Mode" revertSet="yes">
                  <params>
                    <param tag="dolbyVolumeMode" value="True,False" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Dolby_Volume_Mode" method="Get_Dolby_Volume_Mode" revertFlag="yes" >
                  <resultGeneration useMethodTag="check_dolby_volume_mode" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_17" testCaseName= "Set_And_Get_Dialog_Enhancement" desc="Check whether dialog enhancement values are able to set and get" >
            <testCaseInfo testCaseType="loop" revert="true" configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES" useMethodTag="displaysetting_check_feature_applicability" arguments="DialogEnhancement" />
            <testStep testStepId="1" name="Get_Dialog_Enhancement" method="Get_Dialog_Enhancement" saveResult="true" revertGet="yes" >
              <resultGeneration useMethodTag="check_dialog_enhancement" />
            </testStep>
            <testStep testStepId="2" name="Set_Dialog_Enhancement" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Dialog_Enhancement" method="Set_Dialog_Enhancement" revertSet="yes">
                  <params>
                    <param tag="enhancerlevel" value="0,8,16" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Dialog_Enhancement" method="Get_Dialog_Enhancement" revertFlag="yes" >
                  <resultGeneration useMethodTag="check_dialog_enhancement" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_18" testCaseName= "Set_And_Get_Intelligent_Equalizer_Mode" desc="Check whether intelligent equalizer mode values are able to set and get" >
            <testCaseInfo testCaseType="loop" revert="true" configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES" useMethodTag="displaysetting_check_feature_applicability" arguments="IntelligentEqualizer" />
            <testStep testStepId="1" name="Get_Intelligent_Equalizer_Mode" method="Get_Intelligent_Equalizer_Mode" saveResult="true" revertGet="yes" >
              <resultGeneration useMethodTag="check_intelligent_equalizer_mode" />
            </testStep>
            <testStep testStepId="2" name="Set_Intelligent_Equalizer_Mode" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Intelligent_Equalizer_Mode" method="Set_Intelligent_Equalizer_Mode" revertSet="yes">
                  <params>
                    <param tag="intelligentEqualizerMode" value="1,2,3" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Intelligent_Equalizer_Mode" method="Get_Intelligent_Equalizer_Mode" revertFlag="yes" >
                  <resultGeneration useMethodTag="check_intelligent_equalizer_mode" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_19" testCaseName= "Set_And_Get_Volume_Leveller_HDMI0" desc="Check whether volume values are able to set and get for HDMI0 port" >
            <testCaseInfo testCaseType="loop" revert="true"  configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES,CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="VolumeLeveller,HDMI0" />
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="HDMI0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Get_Volume_Leveller" method="Get_Volume_Leveller" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort"  value="HDMI0"  />
                  </params>
              <resultGeneration useMethodTag="check_volume_leveller" />
            </testStep>
            <testStep testStepId="3" name="Set_Volume_Leveller" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Volume_Leveller" method="Set_Volume_Leveller" revertSet="yes">
                  <params>
                    <param tag="audioPort"  value="HDMI0"  />
                    <param tag="level" value="0,5,10" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Volume_Leveller" method="Get_Volume_Levelle" revertFlag="yes" >
                  <params>
                    <param tag="audioPort"  value="HDMI0"  />
                  </params>
                  <resultGeneration useMethodTag="check_volume_leveller" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_20" testCaseName= "Set_And_Get_Bass_Enhancer_HDMI0" desc="Check whether bass enhancer values are able to set and get for HDMI0 port" >
            <testCaseInfo testCaseType="loop" revert="true"  configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES,CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="BassEnhancer,HDMI0" />
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports"   expectedValues="HDMI0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Get_Bass_Enhancer" method="Get_Bass_Enhancer" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort"  value="HDMI0" />
                  </params>
              <resultGeneration useMethodTag="check_bass_enhancer" arguments="check_bass_range" />
            </testStep>
            <testStep testStepId="3" name="Set_Bass_Enhancer" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Bass_Enhancer" method="Set_Bass_Enhancer" revertSet="yes">
                  <params>
                    <param tag="audioPort"  value="HDMI0" />
                    <param tag="bassBoost" value="0,25,50,100" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Bass_Enhancer" method="Get_Bass_Enhancer" revertFlag="yes" >
                  <params>
                    <param tag="audioPort"  value="HDMI0" />
                  </params>
                  <resultGeneration useMethodTag="check_bass_enhancer" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_21" testCaseName= "Set_And_Get_Surround_Virtualizer_HDMI0" desc="Check whether surround virtualizer values are able to set and get for HDMI0 port" >
            <testCaseInfo testCaseType="loop" revert="true"  configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES,CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="SurroundVirtualizer,HDMI0"/>
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports"  expectedValues="HDMI0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Get_Surround_Virtualizer" method="Get_Surround_Virtualizer" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort" value="HDMI0" />
                  </params>
              <resultGeneration useMethodTag="check_surround_virtualizer" arguments="check_surround_virtualizer_range" />
            </testStep>
            <testStep testStepId="3" name="Set_Surround_Virtualizer" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Surround_Virtualizer" method="Set_Surround_Virtualizer" revertSet="yes">
                  <params>
                    <param tag="audioPort" value="HDMI0" />
                    <param tag="boost" value="0,24,48,96" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Surround_Virtualizer" method="Get_Surround_Virtualizer" revertFlag="yes" >
                  <params>
                    <param tag="audioPort" value="HDMI0" />
                  </params>
                  <resultGeneration useMethodTag="check_surround_virtualizer" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_22" testCaseName= "Enable_And_Disable_MI_Steering_HDMI0" desc="Check whether MI steering values are able to set and get for HDMI0 port" >
            <testCaseInfo testCaseType="loop" revert="true"  configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES,CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="MISteering,HDMI0" />
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="HDMI0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Get_MI_Steering" method="Get_MI_Steering" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort"  value="HDMI0"  />
                  </params>
              <resultGeneration useMethodTag="check_mi_steering" />
            </testStep>
            <testStep testStepId="3" name="Enable_And_Disable_MI_Steering" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_MI_Steering" method="Set_MI_Steering" revertSet="yes">
                  <params>
                    <param tag="audioPort"  value="HDMI0"  />
                    <param tag="MISteeringEnable" value="True,False" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_MI_Steering" method="Get_MI_Steering" revertFlag="yes" >
                  <params>
                    <param tag="audioPort"  value="HDMI0"  />
                  </params>
                  <resultGeneration useMethodTag="check_mi_steering" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_23" testCaseName= "Enable_And_Disable_Surround_Decoder_HDMI0" desc="Check whether surround decoder is possible to enable and disable for HDMI0 port" >
            <testCaseInfo testCaseType="loop" revert="true"   configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES,CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="SurroundDecoder,HDMI0"/>
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports"  expectedValues="HDMI0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Get_Surround_Decoder" method="Is_Surround_Decoder_Enabled" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort" value="HDMI0"  />
                  </params>
              <resultGeneration useMethodTag="check_surround_decoder" />
            </testStep>
            <testStep testStepId="3" name="Enable_And_Disable_Surround_Decoder" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Surround_Decoder" method="Enable_Surround_Decoder" revertSet="yes">
                  <params>
                    <param tag="audioPort" value="HDMI0"  />
                    <param tag="surroundDecoderEnable" value="True,False" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Surround_Decoder" method="Is_Surround_Decoder_Enabled" revertFlag="yes" >
                  <params>
                    <param tag="audioPort" value="HDMI0"  />
                  </params>
                  <resultGeneration useMethodTag="check_surround_decoder" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_24" testCaseName= "Set_And_Get_DRC_Mode_HDMI0" desc="Check whether DRC mode values are able to set and get for HDMI0" >
            <testCaseInfo testCaseType="loop" revert="true"  configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES,CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="DRCMode,HDMI0"/>
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="HDMI0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Get_DRC_Mode" method="Get_DRC_Mode" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort" value="HDMI0" />
                  </params>
              <resultGeneration useMethodTag="check_drc_mode" />
            </testStep>
            <testStep testStepId="3" name="Set_DRC_Mode" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_DRC_Mode" method="Set_DRC_Mode" revertSet="yes">
                  <params>
                    <param tag="audioPort" value="HDMI0" />
                    <param tag="DRCMode" value="0,1" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_DRC_Mode" method="Get_DRC_Mode" revertFlag="yes" >
                  <params>
                    <param tag="audioPort" value="HDMI0"/>
                  </params>
                  <resultGeneration useMethodTag="check_drc_mode" >
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>
 
        <testCase testCaseId="DS_25" testCaseName= "Set_And_Get_Volume_Level_HDMI0" desc="Check whether volume level values are able to set and get for HDMI0 port" >
            <testCaseInfo testCaseType="loop"   configurableTest="true" testKey="CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="HDMI0" />
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="HDMI0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Set_Volume_Level" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Volume_Level"  method="Set_Volume_Level" >
                  <params>
                    <param tag="audioPort"  value="HDMI0" />
                    <param tag="volumeLevel" value="0,25,50,100" iteration="true"  />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Volume_Level" method="Get_Volume_Level"  >
                  <params>
                    <param tag="audioPort"  value="HDMI0" />
                  </params>
                  <resultGeneration useMethodTag="check_volume_level" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>    
     
        <testCase testCaseId="DS_26" testCaseName= "Set_And_Get_Gain_HDMI0" desc="Check whether audio port gain values are able to set and get for HDMI0 port" >
            <testCaseInfo testCaseType="loop" revert="true" configurableTest="true" testKey="CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="HDMI0" />
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports"  expectedValues="HDMI0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Get_Gain" method="Get_Gain" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort" value="HDMI0" />
                  </params>
              <resultGeneration useMethodTag="check_gain" arguments="check_gain_range" />
            </testStep>
            <testStep testStepId="3" name="Set_Gain" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Gain"  method="Set_Gain" revertSet="yes">
                  <params>
                    <param tag="audioPort" value="HDMI0" />
                    <param tag="gain" value="0,25,50,100" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Gain" method="Get_Gain" revertFlag="yes" >
                  <params>
                    <param tag="audioPort" value="HDMI0" />
                  </params>
                  <resultGeneration useMethodTag="check_gain" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_27" testCaseName= "Mute_And_Unmute_Audio_HDMI0" desc="Check whether audio is able to mute and unmute  for HDMI0 port" >
            <testCaseInfo testCaseType="loop" revert="true" configurableTest="true" testKey="CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="HDMI0"/>
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports"  expectedValues="HDMI0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Get_Muted" method="Get_Muted" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort"  value="HDMI0" />
                  </params>
              <resultGeneration useMethodTag="check_muted" arguments="check_state"/>
            </testStep>
            <testStep testStepId="3" name="Set_Muted" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Muted"  method="Set_Muted" revertSet="yes">
                  <params>
                    <param tag="audioPort"  value="HDMI0" />
                    <param tag="muted" value="True,False" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Muted" method="Get_Muted" revertFlag="yes" >
                  <params>
                    <param tag="audioPort"  value="HDMI0" />
                  </params>
                  <resultGeneration useMethodTag="check_muted" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_28" testCaseName= "Set_And_Get_Audio_Delay_HDMI0" desc="Check whether audio delay values are able to set and get for HDMI0 port" >
            <testCaseInfo testCaseType="loop" revert="true" configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES,CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="AudioDelay,HDMI0"/>
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports"  expectedValues="HDMI0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Get_Audio_Delay" method="Get_Audio_Delay" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort" value="HDMI0" />
                  </params>
              <resultGeneration useMethodTag="check_audio_delay" arguments="check_audio_delay_range" />
            </testStep>
            <testStep testStepId="3" name="Set_Audio_Delay" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Audio_Delay"  method="Set_Audio_Delay" revertSet="yes">
                  <params>
                    <param tag="audioPort" value="HDMI0"/>
                    <param tag="audioDelay" value="0,10,50,100" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Audio_Delay" method="Get_Audio_Delay" revertFlag="yes" >
                  <params>
                    <param tag="audioPort" value="HDMI0" />
                  </params>
                  <resultGeneration useMethodTag="check_audio_delay" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_29" testCaseName= "Set_And_Get_Audio_Delay_Offset_HDMI0" desc="Check whether audio delay offset values are able to set and get for HDMI0" >
            <testCaseInfo testCaseType="loop" revert="true" configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES,CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="AudioDelayOffset,HDMI0"/>
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports"  expectedValues="HDMI0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Get_Audio_Delay_Offset" method="Get_Audio_Delay_Offset" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort"  value="HDMI0" />
                  </params>
              <resultGeneration useMethodTag="check_audio_delay_offset" arguments="check_audio_delay_offset_range" />
            </testStep>
            <testStep testStepId="3" name="Set_Audio_Delay_Offset" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Audio_Delay_Offset"  method="Set_Audio_Delay_Offset" revertSet="yes">
                  <params>
                    <param tag="audioPort"  value="HDMI0" />
                    <param tag="audioDelayOffset" value="0,10,50,100" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Audio_Delay_Offset" method="Get_Audio_Delay_Offset" revertFlag="yes" >
                  <params>
                    <param tag="audioPort"  value="HDMI0" />
                  </params>
                  <resultGeneration useMethodTag="check_audio_delay_offset" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_30" testCaseName= "Check_Sink_Atmos_Capability" desc="Check the the Atmos capability of the sink">
            <testCaseInfo testCaseType="direct" configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES" useMethodTag="displaysetting_check_feature_applicability" arguments="SinkAtmosCapability"/>
            <testStep testStepId="1" name="Check_Sink_Atmos_Capability" method="Get_Sink_Atmos_Capability">
                <resultGeneration useMethodTag="check_sink_atmos_capability" />
            </testStep>
        </testCase>

        <testCase testCaseId="DS_31" testCaseName= "Enable_Disable_Audio_Atmos_Output_Mode" desc="Check whether audio atmos output mode is possile to enable and disable">
            <testCaseInfo testCaseType="loop" />
            <testStep testStepId="1" name="Enable_Disable_Audio_Atmos_Output_Mode" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Enable_Disable_Audio_Atmos_Output_Mode" method="Set_Audio_Atmos_Output_Mode" >
                  <params>
                    <param tag="enable" value="True,False" iteration="true" />
                  </params>
                <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_32" testCaseName= "Get_TV_HDR_Capabilities" desc="Check the HDR capabilities of TV">
            <testCaseInfo testCaseType="direct"/>
            <testStep testStepId="1" name="Check_Display_Connected_Status" method="Get_Connected_VideoDisplays" >
                <resultGeneration useMethodTag="display_connected_status"/>
            </testStep>
            <testStep testStepId="2" name="Get_TV_HDR_Capabilities" method="Get_TV_HDR_Capabilities">
                <resultGeneration useMethodTag="check_tv_hdr_capabilities" />
            </testStep>
        </testCase>

        <testCase testCaseId="DS_33" testCaseName= "Is_Connected_Device_Repeater" desc="Check whether connected device is a repeater" >
            <testCaseInfo testCaseType="direct" configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES" useMethodTag="displaysetting_check_feature_applicability" arguments="DeviceRepeater" />
            <testStep testStepId="1" name="Check_Display_Connected_Status" method="Get_Connected_VideoDisplays" >
                <resultGeneration useMethodTag="display_connected_status"/>
            </testStep>
            <testStep testStepId="2" name="Is_Connected_Device_Repeater" method="Is_Connected_Device_Repeater" >
                <resultGeneration useMethodTag="check_device_repeater" >
                  <expectedValues useConfigFile="true" key="DEVICE_REPEATER" />
                </resultGeneration>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_34" testCaseName= "Get_Default_Resolution" desc="Check whether the default resolution is available in supported resolutions" >
            <testCaseInfo testCaseType="direct"/>
            <testStep testStepId="1" name="Check_Display_Connected_Status" method="Get_Connected_VideoDisplays" saveResult="true" >
                <resultGeneration useMethodTag="display_connected_status"/>
            </testStep>
            <testStep testStepId="2" name="Get_Supported_Resolutions" method="Get_Supported_Resolutions" saveResult="true">
                <params>
                  <param tag="videoDisplay" usePreviousResult="true" Id="1" useMethodTag="set_video_display"/>
                </params>
                <resultGeneration useMethodTag="display_supported_resolutions"/>
            </testStep>
            <testStep testStepId="3" name="Get_Default_Resolution" method="Get_Default_Resolution" >
                <resultGeneration useMethodTag="check_default_resolution" >
                  <expectedValues usePreviousResult="true" Id="2" useMethodTag="get_supported_resolutions" />
                </resultGeneration>
            </testStep>
        </testCase>
        <testCase testCaseId="DS_35" testCaseName= "Set_And_Get_Supported_Audio_Modes_SPDIF0"  desc="Check whether supported audio modes are able to set for SPDIF0 port">
            <testCaseInfo testCaseType="loop" revert="true" configurableTest="true" testKey="CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="SPDIF0" />
            <testStep testStepId="1" name="Check_Display_Connected_Status" method="Get_Connected_VideoDisplays" >
                  <resultGeneration useMethodTag="display_connected_status" />
                </testStep>
            <testStep testStepId="2" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="SPDIF0" />
            </testStep>
            <testStep testStepId="3" name="Get_Supported_Audio_Modes" method="Get_Supported_AudioModes" saveResult="true">
                  <params>
                    <param tag="audioPort" value="SPDIF0"/>
                  </params>
                <resultGeneration useMethodTag="check_supported_audio_modes"/>
            </testStep>
            <testStep testStepId="4" name="Get_Sound_Mode" method="Get_Sound_Mode" saveResult="true" revertGet="yes">
                  <params>
                    <param tag="audioPort" value="SPDIF0" />
                  </params>
                <resultGeneration useMethodTag="check_sound_mode"/>
            </testStep>
            <testStep testStepId="5"  name="Set_Sound_Mode" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Sound_Mode" method="Set_Sound_Mode" revertSet="yes">
                  <params>
                    <param tag="audioPort" value="SPDIF0" />
                    <param tag="soundMode" usePreviousResult="true" Id="3" useMethodTag="get_supported_sound_modes" iteration="true" revertParam="yes" />
                    <param tag="persist" value="false" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Sound_Mode" method="Get_Sound_Mode" revertFlag="yes">
                  <params>
                    <param tag="audioPort" value="SPDIF0" />
                  </params>
                  <resultGeneration useMethodTag="check_sound_mode" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_36" testCaseName= "Set_And_Get_Supported_Audio_Modes_IDLR0"  desc="Check whether supported audio modes are able to set for IDLR0 port">
            <testCaseInfo testCaseType="loop" revert="true" configurableTest="true" testKey="CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="IDLR0" />
            <testStep testStepId="1" name="Check_Display_Connected_Status" method="Get_Connected_VideoDisplays" >
                  <resultGeneration useMethodTag="display_connected_status" />
                </testStep>
            <testStep testStepId="2" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="IDLR0" />
            </testStep>
            <testStep testStepId="3" name="Get_Supported_Audio_Modes" method="Get_Supported_AudioModes" saveResult="true">
                  <params>
                    <param tag="audioPort" value="IDLR0"/>
                  </params>
                <resultGeneration useMethodTag="check_supported_audio_modes"/>
            </testStep>
            <testStep testStepId="4" name="Get_Sound_Mode" method="Get_Sound_Mode" saveResult="true" revertGet="yes">
                  <params>
                    <param tag="audioPort" value="IDLR0" />
                  </params>
                <resultGeneration useMethodTag="check_sound_mode"/>
            </testStep>
            <testStep testStepId="5"  name="Set_Sound_Mode" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Sound_Mode" method="Set_Sound_Mode" revertSet="yes">
                  <params>
                    <param tag="audioPort" value="IDLR0" />
                    <param tag="soundMode" usePreviousResult="true" Id="3" useMethodTag="get_supported_sound_modes" iteration="true" revertParam="yes" />
                    <param tag="persist" value="false" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Sound_Mode" method="Get_Sound_Mode" revertFlag="yes">
                  <params>
                    <param tag="audioPort" value="IDLR0" />
                  </params>
                  <resultGeneration useMethodTag="check_sound_mode" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_37" testCaseName= "Set_And_Get_Supported_Audio_Modes_SPEAKER0"  desc="Check whether supported audio modes are able to set for SPEAKER0 port">
            <testCaseInfo testCaseType="loop" revert="true" configurableTest="true" testKey="CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="SPEAKER0" />
            <testStep testStepId="1" name="Check_Display_Connected_Status" method="Get_Connected_VideoDisplays" >
                  <resultGeneration useMethodTag="display_connected_status" />
                </testStep>
            <testStep testStepId="2" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="SPEAKER0" />
            </testStep>
            <testStep testStepId="3" name="Get_Supported_Audio_Modes" method="Get_Supported_AudioModes" saveResult="true">
                  <params>
                    <param tag="audioPort" value="SPEAKER0"/>
                  </params>
                <resultGeneration useMethodTag="check_supported_audio_modes"/>
            </testStep>
            <testStep testStepId="4" name="Get_Sound_Mode" method="Get_Sound_Mode" saveResult="true" revertGet="yes">
                  <params>
                    <param tag="audioPort" value="SPEAKER0" />
                  </params>
                <resultGeneration useMethodTag="check_sound_mode"/>
            </testStep>
            <testStep testStepId="5"  name="Set_Sound_Mode" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Sound_Mode" method="Set_Sound_Mode" revertSet="yes">
                  <params>
                    <param tag="audioPort" value="SPEAKER0" />
                    <param tag="soundMode" usePreviousResult="true" Id="3" useMethodTag="get_supported_sound_modes" iteration="true" revertParam="yes" />
                    <param tag="persist" value="false" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Sound_Mode" method="Get_Sound_Mode" revertFlag="yes">
                  <params>
                    <param tag="audioPort" value="SPEAKER0" />
                  </params>
                  <resultGeneration useMethodTag="check_sound_mode" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_38" testCaseName= "Set_And_Get_Volume_Leveller_SPDIF0" desc="Check whether volume values are able to set and get for SPDIF0 port" >
            <testCaseInfo testCaseType="loop" revert="true" configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES,CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="VolumeLeveller,SPDIF0"/>
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="SPDIF0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Get_Volume_Leveller" method="Get_Volume_Leveller" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort" value="SPDIF0" />
                  </params>
              <resultGeneration useMethodTag="check_volume_leveller" />
            </testStep>
            <testStep testStepId="3" name="Set_Volume_Leveller" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Volume_Leveller" method="Set_Volume_Leveller" revertSet="yes">
                  <params>
                    <param tag="audioPort" value="SPDIF0"  />
                    <param tag="level" value="0,5,10" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Volume_Leveller" method="Get_Volume_Levelle" revertFlag="yes" >
                  <params>
                    <param tag="audioPort" value="SPDIF0" />
                  </params>
                  <resultGeneration useMethodTag="check_volume_leveller" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_39" testCaseName= "Set_And_Get_Volume_Leveller_IDLR0" desc="Check whether volume values are able to set and get for IDLR0 port" >
            <testCaseInfo testCaseType="loop" revert="true" configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES,CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="VolumeLeveller,IDLR0"/>
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="IDLR0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Get_Volume_Leveller" method="Get_Volume_Leveller" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort" value="IDLR0" />
                  </params>
              <resultGeneration useMethodTag="check_volume_leveller" />
            </testStep>
            <testStep testStepId="3" name="Set_Volume_Leveller" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Volume_Leveller" method="Set_Volume_Leveller" revertSet="yes">
                  <params>
                    <param tag="audioPort" value="IDLR0"  />
                    <param tag="level" value="0,5,10" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Volume_Leveller" method="Get_Volume_Levelle" revertFlag="yes" >
                  <params>
                    <param tag="audioPort" value="IDLR0" />
                  </params>
                  <resultGeneration useMethodTag="check_volume_leveller" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_40" testCaseName= "Set_And_Get_Volume_Leveller_SPEAKER0" desc="Check whether volume values are able to set and get for SPEAKER0 port" >
            <testCaseInfo testCaseType="loop" revert="true" configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES,CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="VolumeLeveller,SPEAKER0"/>
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="SPEAKER0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Get_Volume_Leveller" method="Get_Volume_Leveller" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort" value="SPEAKER0" />
                  </params>
              <resultGeneration useMethodTag="check_volume_leveller" />
            </testStep>
            <testStep testStepId="3" name="Set_Volume_Leveller" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Volume_Leveller" method="Set_Volume_Leveller" revertSet="yes">
                  <params>
                    <param tag="audioPort" value="SPEAKER0"  />
                    <param tag="level" value="0,5,10" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Volume_Leveller" method="Get_Volume_Levelle" revertFlag="yes" >
                  <params>
                    <param tag="audioPort" value="SPEAKER0" />
                  </params>
                  <resultGeneration useMethodTag="check_volume_leveller" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_41" testCaseName= "Set_And_Get_Bass_Enhancer_SPDIF0" desc="Check whether bass enhancer values are able to set and get for SPDIF0 port" >
            <testCaseInfo testCaseType="loop" revert="true"  configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES,CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="BassEnhancer,SPDIF0" />
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="SPDIF0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Get_Bass_Enhancer" method="Get_Bass_Enhancer" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort" value="SPDIF0" />
                  </params>
              <resultGeneration useMethodTag="check_bass_enhancer" arguments="check_bass_range" />
            </testStep>
            <testStep testStepId="3" name="Set_Bass_Enhancer" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Bass_Enhancer" method="Set_Bass_Enhancer" revertSet="yes">
                  <params>
                    <param tag="audioPort" value="SPDIF0" />
                    <param tag="bassBoost" value="0,25,50,100" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Bass_Enhancer" method="Get_Bass_Enhancer" revertFlag="yes" >
                  <params>
                    <param tag="audioPort" value="SPDIF0" />
                  </params>
                  <resultGeneration useMethodTag="check_bass_enhancer" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_42" testCaseName= "Set_And_Get_Bass_Enhancer_IDLR0" desc="Check whether bass enhancer values are able to set and get for IDLR0 port" >
            <testCaseInfo testCaseType="loop" revert="true"  configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES,CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="BassEnhancer,IDLR0" />
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="IDLR0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Get_Bass_Enhancer" method="Get_Bass_Enhancer" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort" value="IDLR0" />
                  </params>
              <resultGeneration useMethodTag="check_bass_enhancer" arguments="check_bass_range" />
            </testStep>
            <testStep testStepId="3" name="Set_Bass_Enhancer" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Bass_Enhancer" method="Set_Bass_Enhancer" revertSet="yes">
                  <params>
                    <param tag="audioPort" value="IDLR0" />
                    <param tag="bassBoost" value="0,25,50,100" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Bass_Enhancer" method="Get_Bass_Enhancer" revertFlag="yes" >
                  <params>
                    <param tag="audioPort" value="IDLR0" />
                  </params>
                  <resultGeneration useMethodTag="check_bass_enhancer" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_43" testCaseName= "Set_And_Get_Bass_Enhancer_SPEAKER0" desc="Check whether bass enhancer values are able to set and get for SPEAKER0 port" >
            <testCaseInfo testCaseType="loop" revert="true"  configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES,CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="BassEnhancer,SPEAKER0" />
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="SPEAKER0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Get_Bass_Enhancer" method="Get_Bass_Enhancer" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort" value="SPEAKER0" />
                  </params>
              <resultGeneration useMethodTag="check_bass_enhancer" arguments="check_bass_range" />
            </testStep>
            <testStep testStepId="3" name="Set_Bass_Enhancer" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Bass_Enhancer" method="Set_Bass_Enhancer" revertSet="yes">
                  <params>
                    <param tag="audioPort" value="SPEAKER0" />
                    <param tag="bassBoost" value="0,25,50,100" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Bass_Enhancer" method="Get_Bass_Enhancer" revertFlag="yes" >
                  <params>
                    <param tag="audioPort" value="SPEAKER0" />
                  </params>
                  <resultGeneration useMethodTag="check_bass_enhancer" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_44" testCaseName= "Set_And_Get_Surround_Virtualizer_SPDIF0" desc="Check whether surround virtualizer values are able to set and get for SPDIF0 port" >
            <testCaseInfo testCaseType="loop" revert="true"  configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES,CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="SurroundVirtualizer,SPDIF0" />
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="SPDIF0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Get_Surround_Virtualizer" method="Get_Surround_Virtualizer" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort"  value="SPDIF0" />
                  </params>
              <resultGeneration useMethodTag="check_surround_virtualizer" arguments="check_surround_virtualizer_range" />
            </testStep>
            <testStep testStepId="3" name="Set_Surround_Virtualizer" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Surround_Virtualizer" method="Set_Surround_Virtualizer" revertSet="yes">
                  <params>
                    <param tag="audioPort"  value="SPDIF0" />
                    <param tag="boost" value="0,24,48,96" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Surround_Virtualizer" method="Get_Surround_Virtualizer" revertFlag="yes" >
                  <params>
                    <param tag="audioPort"  value="SPDIF0" />
                  </params>
                  <resultGeneration useMethodTag="check_surround_virtualizer" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_45" testCaseName= "Set_And_Get_Surround_Virtualizer_IDLR0" desc="Check whether surround virtualizer values are able to set and get for IDLR0 port" >
            <testCaseInfo testCaseType="loop" revert="true"  configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES,CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="SurroundVirtualizer,IDLR0" />
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="IDLR0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Get_Surround_Virtualizer" method="Get_Surround_Virtualizer" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort"  value="IDLR0" />
                  </params>
              <resultGeneration useMethodTag="check_surround_virtualizer" arguments="check_surround_virtualizer_range" />
            </testStep>
            <testStep testStepId="3" name="Set_Surround_Virtualizer" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Surround_Virtualizer" method="Set_Surround_Virtualizer" revertSet="yes">
                  <params>
                    <param tag="audioPort"  value="IDLR0" />
                    <param tag="boost" value="0,24,48,96" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Surround_Virtualizer" method="Get_Surround_Virtualizer" revertFlag="yes" >
                  <params>
                    <param tag="audioPort"  value="IDLR0" />
                  </params>
                  <resultGeneration useMethodTag="check_surround_virtualizer" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_46" testCaseName= "Set_And_Get_Surround_Virtualizer_SPEAKER0" desc="Check whether surround virtualizer values are able to set and get for SPEAKER0 port" >
            <testCaseInfo testCaseType="loop" revert="true"  configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES,CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="SurroundVirtualizer,SPEAKER0" />
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="SPEAKER0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Get_Surround_Virtualizer" method="Get_Surround_Virtualizer" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort"  value= "SPEAKER0" />
                  </params>
              <resultGeneration useMethodTag="check_surround_virtualizer" arguments="check_surround_virtualizer_range" />
            </testStep>
            <testStep testStepId="3" name="Set_Surround_Virtualizer" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Surround_Virtualizer" method="Set_Surround_Virtualizer" revertSet="yes">
                  <params>
                    <param tag="audioPort"  value="SPEAKER0" />
                    <param tag="boost" value="0,24,48,96" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Surround_Virtualizer" method="Get_Surround_Virtualizer" revertFlag="yes" >
                  <params>
                    <param tag="audioPort"  value="SPEAKER0" />
                  </params>
                  <resultGeneration useMethodTag="check_surround_virtualizer" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_47" testCaseName= "Enable_And_Disable_MI_Steering_SPDIF0" desc="Check whether MI steering values are able to set and get for SPDIF0 port" >
            <testCaseInfo testCaseType="loop" revert="true" configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES,CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="MISteering,SPDIF0"/>
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="SPDIF0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Get_MI_Steering" method="Get_MI_Steering" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort"  value="SPDIF0"/>
                  </params>
              <resultGeneration useMethodTag="check_mi_steering" />
            </testStep>
            <testStep testStepId="3" name="Enable_And_Disable_MI_Steering" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_MI_Steering" method="Set_MI_Steering" revertSet="yes">
                  <params>
                    <param tag="audioPort"  value="SPDIF0" />
                    <param tag="MISteeringEnable" value="True,False" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_MI_Steering" method="Get_MI_Steering" revertFlag="yes" >
                  <params>
                    <param tag="audioPort"  value="SPDIF0" />
                  </params>
                  <resultGeneration useMethodTag="check_mi_steering" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_48" testCaseName= "Enable_And_Disable_MI_Steering_IDLR0" desc="Check whether MI steering values are able to set and get for IDLR0 port" >
            <testCaseInfo testCaseType="loop" revert="true" configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES,CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="MISteering,IDLR0"/>
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="IDLR0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Get_MI_Steering" method="Get_MI_Steering" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort"  value="IDLR0"/>
                  </params>
              <resultGeneration useMethodTag="check_mi_steering" />
            </testStep>
            <testStep testStepId="3" name="Enable_And_Disable_MI_Steering" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_MI_Steering" method="Set_MI_Steering" revertSet="yes">
                  <params>
                    <param tag="audioPort"  value="IDLR0" />
                    <param tag="MISteeringEnable" value="True,False" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_MI_Steering" method="Get_MI_Steering" revertFlag="yes" >
                  <params>
                    <param tag="audioPort"  value="IDLR0" />
                  </params>
                  <resultGeneration useMethodTag="check_mi_steering" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_49" testCaseName= "Enable_And_Disable_MI_Steering_SPEAKER0" desc="Check whether MI steering values are able to set and get for SPEAKER0 port" >
            <testCaseInfo testCaseType="loop" revert="true" configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES,CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="MISteering,SPEAKER0"/>
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="SPEAKER0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Get_MI_Steering" method="Get_MI_Steering" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort"  value="SPEAKER0"/>
                  </params>
              <resultGeneration useMethodTag="check_mi_steering" />
            </testStep>
            <testStep testStepId="3" name="Enable_And_Disable_MI_Steering" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_MI_Steering" method="Set_MI_Steering" revertSet="yes">
                  <params>
                    <param tag="audioPort"  value="SPEAKER0" />
                    <param tag="MISteeringEnable" value="True,False" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_MI_Steering" method="Get_MI_Steering" revertFlag="yes" >
                  <params>
                    <param tag="audioPort"  value="SPEAKER0" />
                  </params>
                  <resultGeneration useMethodTag="check_mi_steering" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_50" testCaseName= "Enable_And_Disable_Surround_Decoder_SPDIF0" desc="Check whether surround decoder is possible to enable and disable for SPDIF0 port" >
            <testCaseInfo testCaseType="loop" revert="true"  configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES,CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="SurroundDecoder,SPDIF0" />
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports"  expectedValues="SPDIF0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Get_Surround_Decoder" method="Is_Surround_Decoder_Enabled" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort"  value="SPDIF0" />
                  </params>
              <resultGeneration useMethodTag="check_surround_decoder" />
            </testStep>
            <testStep testStepId="3" name="Enable_And_Disable_Surround_Decoder" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Surround_Decoder" method="Enable_Surround_Decoder" revertSet="yes">
                  <params>
                    <param tag="audioPort"  value="SPDIF0" />
                    <param tag="surroundDecoderEnable" value="True,False" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Surround_Decoder" method="Is_Surround_Decoder_Enabled" revertFlag="yes" >
                  <params>
                    <param tag="audioPort"  value="SPDIF0" />
                  </params>
                  <resultGeneration useMethodTag="check_surround_decoder" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_51" testCaseName= "Enable_And_Disable_Surround_Decoder_IDLR0" desc="Check whether surround decoder is possible to enable and disable for IDLR0 port" >
            <testCaseInfo testCaseType="loop" revert="true"  configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES,CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="SurroundDecoder,IDLR0" />
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports"  expectedValues="IDLR0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Get_Surround_Decoder" method="Is_Surround_Decoder_Enabled" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort"  value="IDLR0" />
                  </params>
              <resultGeneration useMethodTag="check_surround_decoder" />
            </testStep>
            <testStep testStepId="3" name="Enable_And_Disable_Surround_Decoder" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Surround_Decoder" method="Enable_Surround_Decoder" revertSet="yes">
                  <params>
                    <param tag="audioPort"  value="IDLR0" />
                    <param tag="surroundDecoderEnable" value="True,False" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Surround_Decoder" method="Is_Surround_Decoder_Enabled" revertFlag="yes" >
                  <params>
                    <param tag="audioPort"  value="IDLR0" />
                  </params>
                  <resultGeneration useMethodTag="check_surround_decoder" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>
        <testCase testCaseId="DS_52" testCaseName= "Enable_And_Disable_Surround_Decoder_SPEAKER0" desc="Check whether surround decoder is possible to enable and disable for SPEAKER0 port" >
            <testCaseInfo testCaseType="loop" revert="true"  configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES,CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="SurroundDecoder,SPEAKER0" />
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports"  expectedValues="SPEAKER0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Get_Surround_Decoder" method="Is_Surround_Decoder_Enabled" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort"  value="SPEAKER0" />
                  </params>
              <resultGeneration useMethodTag="check_surround_decoder" />
            </testStep>
            <testStep testStepId="3" name="Enable_And_Disable_Surround_Decoder" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Surround_Decoder" method="Enable_Surround_Decoder" revertSet="yes">
                  <params>
                    <param tag="audioPort"  value="SPEAKER0" />
                    <param tag="surroundDecoderEnable" value="True,False" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Surround_Decoder" method="Is_Surround_Decoder_Enabled" revertFlag="yes" >
                  <params>
                    <param tag="audioPort"  value="SPEAKER0" />
                  </params>
                  <resultGeneration useMethodTag="check_surround_decoder" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_53" testCaseName= "Set_And_Get_DRC_Mode_SPDIF0" desc="Check whether DRC mode values are able to set and get for SPDIF0" >
            <testCaseInfo testCaseType="loop" revert="true"  configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES,CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="DRCMode,SPDIF0"/>
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="SPDIF0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Get_DRC_Mode" method="Get_DRC_Mode" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort"  value="SPDIF0" />
                  </params>
              <resultGeneration useMethodTag="check_drc_mode" />
            </testStep>
            <testStep testStepId="3" name="Set_DRC_Mode" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_DRC_Mode" method="Set_DRC_Mode" revertSet="yes">
                  <params>
                    <param tag="audioPort"  value="SPDIF0" />
                    <param tag="DRCMode" value="0,1" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_DRC_Mode" method="Get_DRC_Mode" revertFlag="yes" >
                  <params>
                    <param tag="audioPort"  value="SPDIF0" />
                  </params>
                  <resultGeneration useMethodTag="check_drc_mode" >
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>
        <testCase testCaseId="DS_54" testCaseName= "Set_And_Get_DRC_Mode_IDLR0" desc="Check whether DRC mode values are able to set and get for IDLR0" >
            <testCaseInfo testCaseType="loop" revert="true"  configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES,CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="DRCMode,IDLR0"/>
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="IDLR0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Get_DRC_Mode" method="Get_DRC_Mode" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort"  value="IDLR0" />
                  </params>
              <resultGeneration useMethodTag="check_drc_mode" />
            </testStep>
            <testStep testStepId="3" name="Set_DRC_Mode" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_DRC_Mode" method="Set_DRC_Mode" revertSet="yes">
                  <params>
                    <param tag="audioPort"  value="IDLR0" />
                    <param tag="DRCMode" value="0,1" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_DRC_Mode" method="Get_DRC_Mode" revertFlag="yes" >
                  <params>
                    <param tag="audioPort"  value="IDLR0" />
                  </params>
                  <resultGeneration useMethodTag="check_drc_mode" >
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_55" testCaseName= "Set_And_Get_DRC_Mode_SPEAKER0" desc="Check whether DRC mode values are able to set and get for SPEAKER0" >
            <testCaseInfo testCaseType="loop" revert="true"  configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES,CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="DRCMode,SPEAKER0"/>
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="SPEAKER0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Get_DRC_Mode" method="Get_DRC_Mode" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort"  value="SPEAKER0" />
                  </params>
              <resultGeneration useMethodTag="check_drc_mode" />
            </testStep>
            <testStep testStepId="3" name="Set_DRC_Mode" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_DRC_Mode" method="Set_DRC_Mode" revertSet="yes">
                  <params>
                    <param tag="audioPort"  value="SPEAKER0" />
                    <param tag="DRCMode" value="0,1" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_DRC_Mode" method="Get_DRC_Mode" revertFlag="yes" >
                  <params>
                    <param tag="audioPort"  value="SPEAKER0" />
                  </params>
                  <resultGeneration useMethodTag="check_drc_mode" >
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_56" testCaseName= "Set_And_Get_Volume_Level_SPDIF0" desc="Check whether volume level values are able to set and get for SPDIF0 port" >
            <testCaseInfo testCaseType="loop"   configurableTest="true" testKey="CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="SPDIF0"/>
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="SPDIF0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Set_Volume_Level" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Volume_Level"  method="Set_Volume_Level" >
                  <params>
                    <param tag="audioPort"  value="SPDIF0"  />
                    <param tag="volumeLevel" value="0,25,50,100" iteration="true"  />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Volume_Level" method="Get_Volume_Level" >
                  <params>
                    <param tag="audioPort"  value="SPDIF0"  />
                  </params>
                  <resultGeneration useMethodTag="check_volume_level" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>     

        <testCase testCaseId="DS_57" testCaseName= "Set_And_Get_Volume_Level_IDLR0" desc="Check whether volume level values are able to set and get for IDLR0 port" >
            <testCaseInfo testCaseType="loop"  configurableTest="true" testKey="CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="IDLR0"/>
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="IDLR0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Set_Volume_Level" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Volume_Level"  method="Set_Volume_Level"  >
                  <params>
                    <param tag="audioPort"  value="IDLR0"  />
                    <param tag="volumeLevel" value="0,25,50,100" iteration="true"  />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Volume_Level" method="Get_Volume_Level" >
                  <params>
                    <param tag="audioPort"  value="IDLR0"  />
                  </params>
                  <resultGeneration useMethodTag="check_volume_level" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>
        
        <testCase testCaseId="DS_58" testCaseName= "Set_And_Get_Volume_Level_SPEAKER0" desc="Check whether volume level values are able to set and get for SPEAKER0 port" >
            <testCaseInfo testCaseType="loop"   configurableTest="true" testKey="CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="SPEAKER0"/>
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="SPEAKER0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Set_Volume_Level" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Volume_Level"  method="Set_Volume_Level">
                  <params>
                    <param tag="audioPort"  value="SPEAKER0"  />
                    <param tag="volumeLevel" value="0,25,50,100" iteration="true" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Volume_Level" method="Get_Volume_Level"  >
                  <params>
                    <param tag="audioPort"  value="SPEAKER0"  />
                  </params>
                  <resultGeneration useMethodTag="check_volume_level" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>
        <testCase testCaseId="DS_59" testCaseName= "Set_And_Get_Gain_SPDIF0" desc="Check whether audio port gain values are able to set and get for SPDIF0 port" >
            <testCaseInfo testCaseType="loop" revert="true"  configurableTest="true" testKey="CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="SPDIF0"/>
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="SPDIF0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Get_Gain" method="Get_Gain" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort"  value="SPDIF0" />
                  </params>
              <resultGeneration useMethodTag="check_gain" arguments="check_gain_range" />
            </testStep>
            <testStep testStepId="3" name="Set_Gain" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Gain"  method="Set_Gain" revertSet="yes">
                  <params>
                    <param tag="audioPort"  value="SPDIF0" />
                    <param tag="gain" value="0,25,50,100" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Gain" method="Get_Gain" revertFlag="yes" >
                  <params>
                    <param tag="audioPort"  value="SPDIF0" />
                  </params>
                  <resultGeneration useMethodTag="check_gain" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>
        <testCase testCaseId="DS_60" testCaseName= "Set_And_Get_Gain_IDLR0" desc="Check whether audio port gain values are able to set and get for IDLR0 port" >
            <testCaseInfo testCaseType="loop" revert="true"  configurableTest="true" testKey="CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="IDLR0"/>
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="IDLR0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Get_Gain" method="Get_Gain" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort"  value="IDLR0" />
                  </params>
              <resultGeneration useMethodTag="check_gain" arguments="check_gain_range" />
            </testStep>
            <testStep testStepId="3" name="Set_Gain" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Gain"  method="Set_Gain" revertSet="yes">
                  <params>
                    <param tag="audioPort"  value="IDLR0" />
                    <param tag="gain" value="0,25,50,100" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Gain" method="Get_Gain" revertFlag="yes" >
                  <params>
                    <param tag="audioPort"  value="IDLR0" />
                  </params>
                  <resultGeneration useMethodTag="check_gain" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>
        <testCase testCaseId="DS_61" testCaseName= "Set_And_Get_Gain_SPEAKER0" desc="Check whether audio port gain values are able to set and get for SPEAKER0 port" >
            <testCaseInfo testCaseType="loop" revert="true"  configurableTest="true" testKey="CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="SPEAKER0"/>
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="SPEAKER0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Get_Gain" method="Get_Gain" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort"  value="SPEAKER0" />
                  </params>
              <resultGeneration useMethodTag="check_gain" arguments="check_gain_range" />
            </testStep>
            <testStep testStepId="3" name="Set_Gain" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Gain"  method="Set_Gain" revertSet="yes">
                  <params>
                    <param tag="audioPort"  value="SPEAKER0" />
                    <param tag="gain" value="0,25,50,100" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Gain" method="Get_Gain" revertFlag="yes" >
                  <params>
                    <param tag="audioPort"  value="SPEAKER0" />
                  </params>
                  <resultGeneration useMethodTag="check_gain" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>
        <testCase testCaseId="DS_62" testCaseName= "Mute_And_Unmute_Audio_SPDIF0" desc="Check whether audio is able to mute and unmute for SPDIF0 port" >
            <testCaseInfo testCaseType="loop" revert="true"  configurableTest="true" testKey="CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="SPDIF0"/>
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports"  expectedValues="SPDIF0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Get_Muted" method="Get_Muted" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort" value="SPDIF0" />
                  </params>
              <resultGeneration useMethodTag="check_muted" arguments="check_state"/>
            </testStep>
            <testStep testStepId="3" name="Set_Muted" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Muted"  method="Set_Muted" revertSet="yes">
                  <params>
                    <param tag="audioPort" value="SPDIF0" />
                    <param tag="muted" value="True,False" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Muted" method="Get_Muted" revertFlag="yes" >
                  <params>
                    <param tag="audioPort" value="SPDIF0" />
                  </params>
                  <resultGeneration useMethodTag="check_muted" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_63" testCaseName= "Mute_And_Unmute_Audio_IDLR0" desc="Check whether audio is able to mute and unmute for IDLR0 port" >
            <testCaseInfo testCaseType="loop" revert="true"  configurableTest="true" testKey="CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="IDLR0"/>
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports"  expectedValues="IDLR0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Get_Muted" method="Get_Muted" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort" value="IDLR0" />
                  </params>
              <resultGeneration useMethodTag="check_muted" arguments="check_state"/>
            </testStep>
            <testStep testStepId="3" name="Set_Muted" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Muted"  method="Set_Muted" revertSet="yes">
                  <params>
                    <param tag="audioPort" value="IDLR0" />
                    <param tag="muted" value="True,False" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Muted" method="Get_Muted" revertFlag="yes" >
                  <params>
                    <param tag="audioPort" value="IDLR0" />
                  </params>
                  <resultGeneration useMethodTag="check_muted" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>
        <testCase testCaseId="DS_64" testCaseName= "Mute_And_Unmute_Audio_SPEAKER0" desc="Check whether audio is able to mute and unmute for SPEAKER0 port" >
            <testCaseInfo testCaseType="loop" revert="true"  configurableTest="true" testKey="CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="SPEAKER0"/>
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports"  expectedValues="SPEAKER0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Get_Muted" method="Get_Muted" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort" value="SPEAKER0" />
                  </params>
              <resultGeneration useMethodTag="check_muted" arguments="check_state"/>
            </testStep>
            <testStep testStepId="3" name="Set_Muted" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Muted"  method="Set_Muted" revertSet="yes">
                  <params>
                    <param tag="audioPort" value="SPEAKER0" />
                    <param tag="muted" value="True,False" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Muted" method="Get_Muted" revertFlag="yes" >
                  <params>
                    <param tag="audioPort" value="SPEAKER0" />
                  </params>
                  <resultGeneration useMethodTag="check_muted" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_65" testCaseName= "Set_And_Get_Audio_Delay_SPDIF0" desc="Check whether audio delay values are able to set and get for SPDIF0 port" >
            <testCaseInfo testCaseType="loop" revert="true" configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES,CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="AudioDelay,SPDIF0" />
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports"  expectedValues="SPDIF0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Get_Audio_Delay" method="Get_Audio_Delay" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort"  value="SPDIF0" />
                  </params>
              <resultGeneration useMethodTag="check_audio_delay" arguments="check_audio_delay_range" />
            </testStep>
            <testStep testStepId="3" name="Set_Audio_Delay" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Audio_Delay"  method="Set_Audio_Delay" revertSet="yes">
                  <params>
                    <param tag="audioPort"  value="SPDIF0" />
                    <param tag="audioDelay" value="0,10,50,100" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Audio_Delay" method="Get_Audio_Delay" revertFlag="yes" >
                  <params>
                    <param tag="audioPort"  value="SPDIF0" />
                  </params>
                  <resultGeneration useMethodTag="check_audio_delay" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>
        <testCase testCaseId="DS_66" testCaseName= "Set_And_Get_Audio_Delay_IDLR0" desc="Check whether audio delay values are able to set and get for IDLR0 port" >
            <testCaseInfo testCaseType="loop" revert="true" configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES,CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="AudioDelay,IDLR0" />
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports"  expectedValues="IDLR0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Get_Audio_Delay" method="Get_Audio_Delay" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort"  value="IDLR0" />
                  </params>
              <resultGeneration useMethodTag="check_audio_delay" arguments="check_audio_delay_range" />
            </testStep>
            <testStep testStepId="3" name="Set_Audio_Delay" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Audio_Delay"  method="Set_Audio_Delay" revertSet="yes">
                  <params>
                    <param tag="audioPort"  value="IDLR0" />
                    <param tag="audioDelay" value="0,10,50,100" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Audio_Delay" method="Get_Audio_Delay" revertFlag="yes" >
                  <params>
                    <param tag="audioPort"  value="IDLR0" />
                  </params>
                  <resultGeneration useMethodTag="check_audio_delay" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>
        <testCase testCaseId="DS_67" testCaseName= "Set_And_Get_Audio_Delay_SPEAKER0" desc="Check whether audio delay values are able to set and get for SPEAKER0 port" >
            <testCaseInfo testCaseType="loop" revert="true" configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES,CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="AudioDelay,SPEAKER0" />
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports"  expectedValues="SPEAKER0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Get_Audio_Delay" method="Get_Audio_Delay" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort"  value="SPEAKER0" />
                  </params>
              <resultGeneration useMethodTag="check_audio_delay" arguments="check_audio_delay_range" />
            </testStep>
            <testStep testStepId="3" name="Set_Audio_Delay" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Audio_Delay"  method="Set_Audio_Delay" revertSet="yes">
                  <params>
                    <param tag="audioPort"  value="SPEAKER0" />
                    <param tag="audioDelay" value="0,10,50,100" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Audio_Delay" method="Get_Audio_Delay" revertFlag="yes" >
                  <params>
                    <param tag="audioPort"  value="SPEAKER0" />
                  </params>
                  <resultGeneration useMethodTag="check_audio_delay" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>
        <testCase testCaseId="DS_68" testCaseName= "Set_And_Get_Audio_Delay_Offset_SPDIF0" desc="Check whether audio delay offset values are able to set and get for SPDIF0 port" >
            <testCaseInfo testCaseType="loop" revert="true" configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES,CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="AudioDelayOffset,SPDIF0"/>
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="SPDIF0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Get_Audio_Delay_Offset" method="Get_Audio_Delay_Offset" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort"  value="SPDIF0" />
                  </params>
              <resultGeneration useMethodTag="check_audio_delay_offset" arguments="check_audio_delay_offset_range" />
            </testStep>
            <testStep testStepId="3" name="Set_Audio_Delay_Offset" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Audio_Delay_Offset"  method="Set_Audio_Delay_Offset" revertSet="yes">
                  <params>
                    <param tag="audioPort"  value="SPDIF0" />
                    <param tag="audioDelayOffset" value="0,10,50,100" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Audio_Delay_Offset" method="Get_Audio_Delay_Offset" revertFlag="yes" >
                  <params>
                    <param tag="audioPort"  value="SPDIF0" />
                  </params>
                  <resultGeneration useMethodTag="check_audio_delay_offset" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>
        <testCase testCaseId="DS_69" testCaseName= "Set_And_Get_Audio_Delay_Offset_IDLR0" desc="Check whether audio delay offset values are able to set and get for IDLR0 port" >
            <testCaseInfo testCaseType="loop" revert="true" configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES,CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="AudioDelayOffset,IDLR0"/>
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="IDLR0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Get_Audio_Delay_Offset" method="Get_Audio_Delay_Offset" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort"  value="IDLR0" />
                  </params>
              <resultGeneration useMethodTag="check_audio_delay_offset" arguments="check_audio_delay_offset_range" />
            </testStep>
            <testStep testStepId="3" name="Set_Audio_Delay_Offset" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Audio_Delay_Offset"  method="Set_Audio_Delay_Offset" revertSet="yes">
                  <params>
                    <param tag="audioPort"  value="IDLR0" />
                    <param tag="audioDelayOffset" value="0,10,50,100" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Audio_Delay_Offset" method="Get_Audio_Delay_Offset" revertFlag="yes" >
                  <params>
                    <param tag="audioPort"  value="IDLR0" />
                  </params>
                  <resultGeneration useMethodTag="check_audio_delay_offset" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>

        <testCase testCaseId="DS_70" testCaseName= "Set_And_Get_Audio_Delay_Offset_SPEAKER0" desc="Check whether audio delay offset values are able to set and get for SPEAKER0 port" >
            <testCaseInfo testCaseType="loop" revert="true" configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES,CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="AudioDelayOffset,SPEAKER0"/>
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="SPEAKER0">
                </resultGeneration>
            </testStep>
            <testStep testStepId="2" name="Get_Audio_Delay_Offset" method="Get_Audio_Delay_Offset" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort"  value="SPEAKER0" />
                  </params>
              <resultGeneration useMethodTag="check_audio_delay_offset" arguments="check_audio_delay_offset_range" />
            </testStep>
            <testStep testStepId="3" name="Set_Audio_Delay_Offset" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Audio_Delay_Offset"  method="Set_Audio_Delay_Offset" revertSet="yes">
                  <params>
                    <param tag="audioPort"  value="SPEAKER0" />
                    <param tag="audioDelayOffset" value="0,10,50,100" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Audio_Delay_Offset" method="Get_Audio_Delay_Offset" revertFlag="yes" >
                  <params>
                    <param tag="audioPort"  value="SPEAKER0" />
                  </params>
                  <resultGeneration useMethodTag="check_audio_delay_offset" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>
        <testCase testCaseId="DS_71" testCaseName="Set_Scart_Parameter"  desc="Sets scart parameter values">
        <testCaseInfo testCaseType="direct" configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES" useMethodTag="displaysetting_check_feature_applicability" arguments="ScartParameter" />
            <testStep testStepId="1" name="Set_Scart_Parameter" method="setScartParameter">
                  <params>
                    <param tag="scartParameter" value="aspect_ratio" />
                    <param tag="scartParameterData" value="4x3" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation"  />
            </testStep>
        </testCase>
        <testCase testCaseId="DS_72" testCaseName= "Set_And_Get_Supported_MS12_Audio_Profiles_HDMI0"  desc="Check whether supported MS12 audio profiles are able to set in HDMI0 port">
            <testCaseInfo testCaseType="loop" revert="true" configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES,CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="MS12AudioProfile,HDMI0"/>
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="HDMI0"/>
            </testStep>
            <testStep testStepId="2" name="Get_Supported_MS12_Audio_Profiles" method="Get_Supported_MS12_Audio_Profiles" saveResult="true">
                  <params>
                    <param tag="audioPort" value="HDMI0"/>
                  </params>
                  <resultGeneration useMethodTag="check_supported_MS12_Audio_Profiles"/>
            </testStep>
            <testStep testStepId="3" name="Get_MS12_Audio_Profile" method="Get_MS12_Audio_Profile" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort" value="HDMI0" />
	          </params>
		  <resultGeneration useMethodTag="check_audio_profile">
		    <expectedValues usePreviousResult="true" Id="2" useMethodTag="get_supported_audio_profiles"/>
		  </resultGeneration>
            </testStep>
            <testStep testStepId="4"  name="Set_MS12_Audio_Profile" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_MS12_Audio_Profile" method="Set_MS12_Audio_Profile" revertSet="yes" >
                  <params>
                    <param tag="audioPort"  value="HDMI0"/>
                    <param tag="ms12AudioProfile" usePreviousResult="true" Id="2" useMethodTag="get_supported_audio_profiles" iteration="true" revertParam="yes"  />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_MS12_Audio_Profile" method="Get_MS12_Audio_Profile" revertFlag="yes" >
                  <params>
                    <param tag="audioPort" value="HDMI0" />
                  </params>
                  <resultGeneration useMethodTag="check_audio_profile">
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>
        <testCase testCaseId="DS_73" testCaseName= "Set_And_Get_Supported_MS12_Audio_Profiles_SPDIF0"  desc="Check whether supported MS12 audio profiles are able to set in SPDIF0 port">
            <testCaseInfo testCaseType="loop" revert="true" configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES,CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="MS12AudioProfile,SPDIF0"/>
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="SPDIF0"/>
            </testStep>
            <testStep testStepId="2" name="Get_Supported_MS12_Audio_Profiles" method="Get_Supported_MS12_Audio_Profiles" saveResult="true">
                  <params>
                    <param tag="audioPort" value="SPDIF0"/>
                  </params>
                  <resultGeneration useMethodTag="check_supported_MS12_Audio_Profiles"/>
            </testStep>
            <testStep testStepId="3" name="Get_MS12_Audio_Profile" method="Get_MS12_Audio_Profile" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort" value="SPDIF0" />
                  </params>
                  <resultGeneration useMethodTag="check_audio_profile">
                    <expectedValues usePreviousResult="true" Id="2" useMethodTag="get_supported_audio_profiles"/>
                  </resultGeneration>
            </testStep>
            <testStep testStepId="4"  name="Set_MS12_Audio_Profile" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_MS12_Audio_Profile" method="Set_MS12_Audio_Profile" revertSet="yes" >
                  <params>
                    <param tag="audioPort"  value="SPDIF0"/>
                    <param tag="ms12AudioProfile" usePreviousResult="true" Id="2" useMethodTag="get_supported_audio_profiles" iteration="true" revertParam="yes"  />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_MS12_Audio_Profile" method="Get_MS12_Audio_Profile" revertFlag="yes" >
                  <params>
                    <param tag="audioPort" value="SPDIF0" />
                  </params>
                  <resultGeneration useMethodTag="check_audio_profile">
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>
        <testCase testCaseId="DS_74" testCaseName= "Set_And_Get_Supported_MS12_Audio_Profiles_IDLR0"  desc="Check whether supported MS12 audio profiles are able to set in IDLR0 port">
            <testCaseInfo testCaseType="loop" revert="true" configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES,CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="MS12AudioProfile,IDLR0"/>
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="IDLR0"/>
            </testStep>
            <testStep testStepId="2" name="Get_Supported_MS12_Audio_Profiles" method="Get_Supported_MS12_Audio_Profiles" saveResult="true">
                  <params>
                    <param tag="audioPort" value="IDLR0"/>
                  </params>
                  <resultGeneration useMethodTag="check_supported_MS12_Audio_Profiles"/>
            </testStep>
            <testStep testStepId="3" name="Get_MS12_Audio_Profile" method="Get_MS12_Audio_Profile" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort" value="IDLR0" />
                  </params>
                  <resultGeneration useMethodTag="check_audio_profile">
                    <expectedValues usePreviousResult="true" Id="2" useMethodTag="get_supported_audio_profiles"/>
                  </resultGeneration>
            </testStep>
            <testStep testStepId="4"  name="Set_MS12_Audio_Profile" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_MS12_Audio_Profile" method="Set_MS12_Audio_Profile" revertSet="yes" >
                  <params>
                    <param tag="audioPort"  value="IDLR0"/>
                    <param tag="ms12AudioProfile" usePreviousResult="true" Id="2" useMethodTag="get_supported_audio_profiles" iteration="true" revertParam="yes"  />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_MS12_Audio_Profile" method="Get_MS12_Audio_Profile" revertFlag="yes" >
                  <params>
                    <param tag="audioPort" value="IDLR0" />
                  </params>
                  <resultGeneration useMethodTag="check_audio_profile">
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>
        <testCase testCaseId="DS_75" testCaseName= "Set_And_Get_Supported_MS12_Audio_Profiles_SPEAKER0"  desc="Check whether supported MS12 audio profiles are able to set in SPEAKER0 port">
            <testCaseInfo testCaseType="loop" revert="true" configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES,CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="MS12AudioProfile,SPEAKER0"/>
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="SPEAKER0"/>
            </testStep>
            <testStep testStepId="2" name="Get_Supported_MS12_Audio_Profiles" method="Get_Supported_MS12_Audio_Profiles" saveResult="true">
                  <params>
                    <param tag="audioPort" value="SPEAKER0"/>
                  </params>
                  <resultGeneration useMethodTag="check_supported_MS12_Audio_Profiles"/>
            </testStep>
            <testStep testStepId="3" name="Get_MS12_Audio_Profile" method="Get_MS12_Audio_Profile" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort" value="SPEAKER0" />
                  </params>
                  <resultGeneration useMethodTag="check_audio_profile">
                    <expectedValues usePreviousResult="true" Id="2" useMethodTag="get_supported_audio_profiles"/>
                  </resultGeneration>
            </testStep>
            <testStep testStepId="4"  name="Set_MS12_Audio_Profile" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_MS12_Audio_Profile" method="Set_MS12_Audio_Profile" revertSet="yes" >
                  <params>
                    <param tag="audioPort"  value="SPEAKER0"/>
                    <param tag="ms12AudioProfile" usePreviousResult="true" Id="2" useMethodTag="get_supported_audio_profiles" iteration="true" revertParam="yes"  />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_MS12_Audio_Profile" method="Get_MS12_Audio_Profile" revertFlag="yes" >
                  <params>
                    <param tag="audioPort" value="SPEAKER0" />
                  </params>
                  <resultGeneration useMethodTag="check_audio_profile">
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>
        <testCase testCaseId="DS_76" testCaseName= "Enable_And_Disable_AudioPort_HDMI0" desc="Check whether able to enable and disable HDMI0 port" >
            <testCaseInfo testCaseType="loop" revert="true" configurableTest="true" testKey="CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="HDMI0"/>
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="HDMI0"/>
            </testStep>
            <testStep testStepId="2" name="Get_Enable_Audio_Port" method="Get_Enable_Audio_Port" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort"  value="HDMI0"/>
                  </params>
              <resultGeneration useMethodTag="check_audio_port_status" expectedValues="True,False" />
            </testStep>
            <testStep testStepId="3" name="Enable_And_Disable_Audio_port" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Enable_Audio_Port" method="Set_Enable_Audio_Port" revertSet="yes">
                  <params>
                    <param tag="audioPort"  value="HDMI0" />
                    <param tag="enable" value="True,False" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Enable_Audio_Port" method="Get_Enable_Audio_Port" revertFlag="yes" >
                  <params>
                    <param tag="audioPort"  value="HDMI0" />
                  </params>
                  <resultGeneration useMethodTag="check_audio_port_status" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>
        <testCase testCaseId="DS_77" testCaseName= "Enable_And_Disable_AudioPort_SPDIF0" desc="Check whether able to enable and disable SPDIF0 port" >
            <testCaseInfo testCaseType="loop" revert="true" configurableTest="true" testKey="CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="SPDIF0"/>
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="SPDIF0"/>
            </testStep>
            <testStep testStepId="2" name="Get_Enable_Audio_Port" method="Get_Enable_Audio_Port" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort"  value="SPDIF0"/>
                  </params>
              <resultGeneration useMethodTag="check_audio_port_status" expectedValues="True,False" />
            </testStep>
            <testStep testStepId="3" name="Enable_And_Disable_Audio_port" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Enable_Audio_Port" method="Set_Enable_Audio_Port" revertSet="yes">
                  <params>
                    <param tag="audioPort"  value="SPDIF0" />
                    <param tag="enable" value="True,False" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Enable_Audio_Port" method="Get_Enable_Audio_Port" revertFlag="yes" >
                  <params>
                    <param tag="audioPort"  value="SPDIF0" />
                  </params>
                  <resultGeneration useMethodTag="check_audio_port_status" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>        
        <testCase testCaseId="DS_78" testCaseName= "Enable_And_Disable_AudioPort_IDLR0" desc="Check whether able to enable and disable IDLR0 port" >
            <testCaseInfo testCaseType="loop" revert="true" configurableTest="true" testKey="CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="IDLR0"/>
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="IDLR0"/>
            </testStep>
            <testStep testStepId="2" name="Get_Enable_Audio_Port" method="Get_Enable_Audio_Port" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort"  value="IDLR0"/>
                  </params>
              <resultGeneration useMethodTag="check_audio_port_status" expectedValues="True,False" />
            </testStep>
            <testStep testStepId="3" name="Enable_And_Disable_Audio_port" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Enable_Audio_Port" method="Set_Enable_Audio_Port" revertSet="yes">
                  <params>
                    <param tag="audioPort"  value="IDLR0" />
                    <param tag="enable" value="True,False" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Enable_Audio_Port" method="Get_Enable_Audio_Port" revertFlag="yes" >
                  <params>
                    <param tag="audioPort"  value="IDLR0" />
                  </params>
                  <resultGeneration useMethodTag="check_audio_port_status" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>
        <testCase testCaseId="DS_79" testCaseName= "Enable_And_Disable_AudioPort_SPEAKER0" desc="Check whether able to enable and disable SPEAKER0 port" >
            <testCaseInfo testCaseType="loop" revert="true" configurableTest="true" testKey="CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="SPEAKER0"/>
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="SPEAKER0"/>
            </testStep>
            <testStep testStepId="2" name="Get_Enable_Audio_Port" method="Get_Enable_Audio_Port" saveResult="true" revertGet="yes" >
                  <params>
                    <param tag="audioPort"  value="SPEAKER0"/>
                  </params>
              <resultGeneration useMethodTag="check_audio_port_status" expectedValues="True,False" />
            </testStep>
            <testStep testStepId="3" name="Enable_And_Disable_Audio_port" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Enable_Audio_Port" method="Set_Enable_Audio_Port" revertSet="yes">
                  <params>
                    <param tag="audioPort"  value="SPEAKER0" />
                    <param tag="enable" value="True,False" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Enable_Audio_Port" method="Get_Enable_Audio_Port" revertFlag="yes" >
                  <params>
                    <param tag="audioPort"  value="SPEAKER0" />
                  </params>
                  <resultGeneration useMethodTag="check_audio_port_status" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>
        <testCase testCaseId="DS_80" testCaseName= "Set_And_Get_Graphic_Equalizer_Mode_HDMI0" desc="Check whether Graphic equalizer mode values are able to set and get for HDMI0 port" >
            <testCaseInfo testCaseType="loop" revert="true" configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES,CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="GraphicEqualizer,HDMI0"/>
	    <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="HDMI0"/>
            </testStep>
	    <testStep testStepId="2" name="Get_Graphic_Equalizer_Mode" method="Get_Graphic_Equalizer_Mode" saveResult="true" revertGet="yes" >
                <params>
                  <param tag="audioPort"  value="HDMI0"/>
                </params>
                <resultGeneration useMethodTag="check_graphic_equalizer_mode" expectedValues="0,1,2,3" />
            </testStep>
            <testStep testStepId="3" name="Set_Graphic_Equalizer_Mode" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Graphic_Equalizer_Mode" method="Set_Graphic_Equalizer_Mode" revertSet="yes">
		  <params>
                    <param tag="audioPort"  value="HDMI0" />
                    <param tag="graphicEqualizerMode" value="0,1,2,3" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
	      <subtestStep subtestStepId="2" name="Get_Graphic_Equalizer_Mode" method="Get_Graphic_Equalizer_Mode" revertFlag="yes" >
		  <params>
                    <param tag="audioPort"  value="HDMI0"/>
                  </params>
                  <resultGeneration useMethodTag="check_graphic_equalizer_mode" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>          
        <testCase testCaseId="DS_81" testCaseName= "Set_And_Get_Graphic_Equalizer_Mode_SPDIF0" desc="Check whether Graphic equalizer mode values are able to set and get for SPDIF0 port" >
            <testCaseInfo testCaseType="loop" revert="true" configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES,CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="GraphicEqualizer,SPDIF0"/>
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="SPDIF0"/>
            </testStep>
            <testStep testStepId="2" name="Get_Graphic_Equalizer_Mode" method="Get_Graphic_Equalizer_Mode" saveResult="true" revertGet="yes" >
                <params>
                  <param tag="audioPort"  value="SPDIF0"/>
                </params>
                <resultGeneration useMethodTag="check_graphic_equalizer_mode" expectedValues="0,1,2,3" />
            </testStep>
            <testStep testStepId="3" name="Set_Graphic_Equalizer_Mode" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Graphic_Equalizer_Mode" method="Set_Graphic_Equalizer_Mode" revertSet="yes">
                  <params>
                    <param tag="audioPort"  value="SPDIF0" />
                    <param tag="graphicEqualizerMode" value="0,1,2,3" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Graphic_Equalizer_Mode" method="Get_Graphic_Equalizer_Mode" revertFlag="yes" >
                  <params>
                    <param tag="audioPort"  value="SPDIF0"/>
                  </params>
                  <resultGeneration useMethodTag="check_graphic_equalizer_mode" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>
        <testCase testCaseId="DS_82" testCaseName= "Set_And_Get_Graphic_Equalizer_Mode_IDLR0" desc="Check whether Graphic equalizer mode values are able to set and get for IDLR0 port" >
            <testCaseInfo testCaseType="loop" revert="true" configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES,CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="GraphicEqualizer,IDLR0"/>
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="IDLR0"/>
            </testStep>
            <testStep testStepId="2" name="Get_Graphic_Equalizer_Mode" method="Get_Graphic_Equalizer_Mode" saveResult="true" revertGet="yes" >
                <params>
                  <param tag="audioPort"  value="IDLR0"/>
                </params>
                <resultGeneration useMethodTag="check_graphic_equalizer_mode" expectedValues="0,1,2,3" />
            </testStep>
            <testStep testStepId="3" name="Set_Graphic_Equalizer_Mode" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Graphic_Equalizer_Mode" method="Set_Graphic_Equalizer_Mode" revertSet="yes">
                  <params>
                    <param tag="audioPort"  value="IDLR0" />
                    <param tag="graphicEqualizerMode" value="0,1,2,3" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Graphic_Equalizer_Mode" method="Get_Graphic_Equalizer_Mode" revertFlag="yes" >
                  <params>
                    <param tag="audioPort"  value="IDLR0"/>
                  </params>
                  <resultGeneration useMethodTag="check_graphic_equalizer_mode" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>
        <testCase testCaseId="DS_83" testCaseName= "Set_And_Get_Graphic_Equalizer_Mode_SPEAKER0" desc="Check whether Graphic equalizer mode values are able to set and get for SPEAKER0 port" >
            <testCaseInfo testCaseType="loop" revert="true" configurableTest="true" testKey="DISPLAYSETTINGS_SUPPORTED_FEATURES,CONNECTED_AUDIO_PORTS" useMethodTag="displaysetting_check_feature_applicability" arguments="GraphicEqualizer,SPEAKER0"/>
            <testStep testStepId="1" name="Check_Connected_AudioPorts" method="Get_Connected_AudioPorts" saveResult="true">
                <resultGeneration useMethodTag="check_connected_audio_ports" expectedValues="SPEAKER0"/>
            </testStep>
            <testStep testStepId="2" name="Get_Graphic_Equalizer_Mode" method="Get_Graphic_Equalizer_Mode" saveResult="true" revertGet="yes" >
                <params>
                  <param tag="audioPort"  value="SPEAKER0"/>
                </params>
                <resultGeneration useMethodTag="check_graphic_equalizer_mode" expectedValues="0,1,2,3" />
            </testStep>
            <testStep testStepId="3" name="Set_Graphic_Equalizer_Mode" testStepType="loop" >
              <subtestStep subtestStepId="1" name="Set_Graphic_Equalizer_Mode" method="Set_Graphic_Equalizer_Mode" revertSet="yes">
                  <params>
                    <param tag="audioPort"  value="SPEAKER0" />
                    <param tag="graphicEqualizerMode" value="0,1,2,3" iteration="true" revertParam="yes" />
                  </params>
                  <resultGeneration useMethodTag="display_settings_check_set_operation" />
              </subtestStep>
              <subtestStep subtestStepId="2" name="Get_Graphic_Equalizer_Mode" method="Get_Graphic_Equalizer_Mode" revertFlag="yes" >
                  <params>
                    <param tag="audioPort"  value="SPEAKER0"/>
                  </params>
                  <resultGeneration useMethodTag="check_graphic_equalizer_mode" >
                    <expectedValues useIterableValue="true" />
                  </resultGeneration>
              </subtestStep>
            </testStep>
        </testCase>
</testPlugin>  

