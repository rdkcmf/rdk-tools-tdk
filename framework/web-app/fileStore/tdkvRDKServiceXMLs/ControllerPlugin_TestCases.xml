<?xml version="1.0" encoding="UTF-8"?>
<!--
 If not stated otherwise in this file or this component's Licenses.txt file the
 following copyright and licenses apply:
 Copyright 2020 RDK Management
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<testPlugin pluginName="Controller" pluginVersion="1">
    <pluginPreRequisite>
      <prerequisite requisiteId="1" requisiteName="Register_And_Listen_Events" type="eventRegister" trace="false" >
          <event pluginName="Controller" eventName="Event_Controller_State_Changed" />
          <event pluginName="Controller" eventName="Event_Controller_All" />
      </prerequisite>
    </pluginPreRequisite>
    <testCase testCaseId="Controller_01" testCaseName="Start_Discovery"  desc="Starts the network discovery">
      <testCaseInfo testCaseType="direct" configurableTest="true" testKey="CONTROLLER_SUPPORTED_FEATURES" useMethodTag="controller_check_feature_applicability" arguments="networkdiscovery"/>
      <testStep testStepId="1" name="Start_Discovery" method="Start_Discovery" >
        <params>
          <param tag="ttl" value="2"/>
        </params>
      </testStep>
       <testStep testStepId="2" name="Get_Discovery_Results" method="Discovery_Results" >
        <resultGeneration useMethodTag="controller_check_discovery_result" />
      </testStep>
    </testCase>
    <testCase testCaseId="Controller_02" testCaseName="Get_Subsystems_Status"  desc="Status of the subsystems">
      <testCaseInfo testCaseType="direct"/>
      <testStep testStepId="1" name="Subsystems_Status" method="Subsystems_Status">
        <resultGeneration useMethodTag="controller_check_subsystems_status" />
      </testStep>
    </testCase>
    <testCase testCaseId="Controller_03" testCaseName="Get_Process_Info"  desc="Gives information about the framework process">
      <testCaseInfo testCaseType="direct"/>
      <testStep testStepId="1" name="Process_Info" method="Process_Info">
        <resultGeneration useMethodTag="controller_check_processinfo" />
      </testStep>
    </testCase>
    <testCase testCaseId="Controller_04" testCaseName="Get_Environment_Variables"  desc="Gets the value of the environment variables">
      <testCaseInfo testCaseType="loop"/>
       <testStep testStepId="1" name="Check_Environment_Variables" testStepType="loop" >
         <subtestStep subtestStepId="1" name="Get_Environment_Variable" method="Environment_Variable" >
           <params>
             <param tag="value"  iteration="true" useConfigFile="true" key="CONTROLLER_ENVIRONMENT_VARIABLES"  indexOnly="true"/>
           </params>
           <resultGeneration useMethodTag="controller_check_environment_variable_value"  />
         </subtestStep>
       </testStep>
    </testCase>
    <testCase testCaseId="Controller_05" testCaseName="Get_Active_Connections_Info"  desc="Gives information about the framework process">
      <testCaseInfo testCaseType="direct"/>
      <testStep testStepId="1" name="Get_Active_Connections_Info" method="Get_Active_Connections_Info">
        <resultGeneration useMethodTag="controller_check_active_connection" />
      </testStep>
    </testCase>
    <testCase testCaseId="Controller_06" testCaseName="Get_All_Plugins_Status"  desc="Gets the plugin current status">
      <testCaseInfo testCaseType="loop" />
      <testStep testStepId="1" name="Check_Plugins_Status" testStepType="loop">
        <subtestStep subtestStepId="1" name="Check_Plugins_Status" method="Get_Plugin_Status" >
          <params>
            <param tag="callsign"  iteration="true" useConfigFile="true" key="Supported_Plugins"  indexOnly="true" />
          </params>
          <resultGeneration useMethodTag="controller_get_plugin_state">
            <arguments value="check_status" useIterableArg="true"/>
          </resultGeneration>
        </subtestStep>
      </testStep>
    </testCase>
    <testCase testCaseId="Controller_07" testCaseName="Set_and_Get_Configuration"  desc="Provides access to the configuration object of a service">
      <testCaseInfo testCaseType="direct"/>
      <testStep testStepId="1" name="Deactivate_Plugin" method="Deactivate_Plugin"  >
        <params>
          <param tag="callsign"  value="WebKitBrowser" />
        </params>
      </testStep>
      <testStep testStepId="2" name="Check_PluginActive_Status" method="Get_Plugin_Status" >
        <params>
          <param tag="plugin" value="WebKitBrowser" indexOnly="true" />
        </params>
        <resultGeneration useMethodTag="controller_get_plugin_state" arguments="check_status,WebKitBrowser"  expectedValues="deactivated"/>
      </testStep>
      <testStep testStepId="3" name="Set_Configuration_url" method="Configuration">
        <params>
          <param tag="value" value="WebKitBrowser" indexOnly="true" />
          <param tag="url"  useConfigFile="true" key="WEBKIT_TEST_URL"  />
        </params>
      </testStep>
      <testStep testStepId="4" name="Get_Configuration_url" method="Configuration">
        <params>
          <param tag="value" value="WebKitBrowser" indexOnly="true" />
        </params>
        <resultGeneration useMethodTag="controller_get_configuration_url" >
          <expectedValues useConfigFile="true" key="WEBKIT_TEST_URL" />
        </resultGeneration>
      </testStep>
      <testStep testStepId="5" name="Activate_Plugin" method="Activate_Plugin" >
        <params>
          <param tag="callsign" value="WebKitBrowser" />
        </params>
      </testStep>
      <testStep subtestStepId="6" name="Check_PluginActive_Status" method="Get_Plugin_Status" >
        <params>
          <param tag="plugin" value="WebKitBrowser" indexOnly="true" />
        </params>
        <resultGeneration useMethodTag="controller_get_plugin_state" arguments ="check_status,WebKitBrowser" expectedValues="activated,suspended,resumed" />
      </testStep>
      <testStep testStepId="7" pluginName="WebKitBrowser" name="Get_Browser_Test_URL" method="Get_Browser_URL">
        <resultGeneration useMethodTag="webkitbrowser_check_url" >
          <expectedValues useConfigFile="true" key="WEBKIT_TEST_URL" />
        </resultGeneration>  
      </testStep>
    </testCase>
    
    <testCase testCaseId="Controller_08" testCaseName="Store_Configuration"  desc="Stores the configuration">
      <testCaseInfo testCaseType="direct"/>
      <testStep testStepId="1" name="Store_Configuration" method="Store_Configuration">
      </testStep>
    </testCase>

    <testCase testCaseId="Controller_09" testCaseName="Delete_Directory_Contents"  desc="Removes contents of a directory from the persistent storage">
      <testCaseInfo testCaseType="direct"/>
      <testStep testStepId="1" name="Execute_Command" action="externalFnCall" >
        <resultGeneration useMethodTag="Create_File">
          <arguments useConfigFile="true" key="CONTROLLER_FILE_DELETE_PATH" />
        </resultGeneration>
      </testStep>
      <testStep testStepId="2" name="Delete_Directory_Contents" method="Delete_Directory_Contents">
        <params>
          <param tag="path" value="TDK_TEST_FILE.txt" />
        </params>
      </testStep>
      <testStep testStepId="3" name="Execute_Command" action="externalFnCall" >
        <resultGeneration useMethodTag="Check_If_File_Exists"  expectedValues="File does not exist" >
          <arguments useConfigFile="true" key="CONTROLLER_FILE_DELETE_PATH" />
        </resultGeneration>
      </testStep>
    </testCase>

    <testCase testCaseId="Controller_10" testCaseName="Check_Plugins_State"  desc="Checks the plugin status" >
      <testCaseInfo testCaseType="loop"/>
      <testStep testStepId="1" name="Execute_Reboot_Command" action="externalFnCall" rebootStep="yes">
        <resultGeneration useMethodTag="executeRebootCmd"/>
      </testStep>
      <testStep testStepId="2" name="Check_Plugins_Status" testStepType="loop" delay="10" >
        <subtestStep subtestStepId="1" name="Check_Plugins_Status" method="Get_Plugin_Status" >
          <params>
            <param tag="callsign"  iteration="true" useConfigFile="true" key="Supported_Plugins"  indexOnly="true" />
          </params>
          <resultGeneration useMethodTag="controller_check_default_plugin_state" >
            <arguments value="check_default_state" useIterableArg="true"/>
          </resultGeneration>
        </subtestStep>
      </testStep>
    </testCase>
     
    <testCase testCaseId="Controller_11" testCaseName="Verify_WPE_Process_Status"  desc="Checks whether WPE Process is running or not" >
      <testCaseInfo testCaseType="loop"/>
      <testStep testStepId="1" name="Check_WPE_Process" action="externalFnCall" >
        <resultGeneration useMethodTag="Check_WPE_Process" >
            <expectedValues useConfigFile="true" key="WPE_PROCESSES_LIST" />
        </resultGeneration>
      </testStep>
    </testCase>
   
    <testCase testCaseId="Controller_12" testCaseName="Check_StateChange_And_All_Events_For_DeviceInfo_plugin" desc="Checks the StateChange and All Events by activating and deactivating the DeviceInfo plugin">
             <testCaseInfo testCaseType="direct" />
             <testCasePreRequisite>
                 <prerequisite requisiteId="1" requisiteName="Activate_Plugin">
                   <testStep testStepId="1" name="Check_PluginActive_Status" method="Get_Plugin_Status" saveResult="true" pluginName="Controller">
                     <params>
                       <param tag="plugin" value="DeviceInfo" indexOnly="true" />
                     </params>
                     <resultGeneration useMethodTag="controller_get_plugin_state" arguments="check_status,DeviceInfo" />
                   </testStep>
                   <testStep testStepId="2" name="Activate_Plugin" method="Activate_Plugin"  pluginName="Controller" >
                     <conditionalExecution enable="true" Id="1" useMethodTag="controller_get_plugin_state" arguments="isDeactivated,DeviceInfo" />
                     <params>
                       <param tag="callsign" value="DeviceInfo" />
                     </params>
                   </testStep>
                   <testStep testStepId="3" name="Check_PluginActive_Status" method="Get_Plugin_Status" pluginName="Controller"  >
                     <conditionalExecution enable="true" Id="1" useMethodTag="controller_get_plugin_state" arguments="isDeactivated,DeviceInfo" />
                     <params>
                       <param tag="plugin" value="DeviceInfo" indexOnly="true" />
                     </params>
                     <resultGeneration useMethodTag="controller_get_plugin_state" arguments="check_status,DeviceInfo" expectedValues="activated"/>
                   </testStep>
                </prerequisite>
      	     </testCasePreRequisite>
             <testStep testStepId="1" name="Deactivate_DeviceInfo_Plugin" method="Deactivate_Plugin"  pluginName="Controller">
                  <params>
                    <param tag="callsign"  value="DeviceInfo" />
                  </params>
	     </testStep>
             <testStep testStepId="2" name="Check_PluginActive_Status" method="Get_Plugin_Status" pluginName="Controller" delay="1" >
                <params>
                  <param tag="plugin" value="DeviceInfo" indexOnly="true" />
                </params>
                <resultGeneration useMethodTag="controller_get_plugin_state" arguments="check_status,DeviceInfo" expectedValues="deactivated"/>
	     </testStep>
             <testStep testStepId="3" name="Check_State_Change_Event" event="Event_Controller_State_Changed" action="eventListener" delay="2" clear="false">
              <resultGeneration useMethodTag="controller_check_state_change_event" expectedValues="deviceinfo,deactivated,requested"/>
             </testStep>
             <testStep testStepId="4" name="Check_All_Event" event="Event_Controller_All" action="eventListener" >
              <resultGeneration useMethodTag="controller_check_all_event" expectedValues="deviceinfo,deactivated,requested"/>
             </testStep>
             <testStep testStepId="5" name="Activate_DeviceInfo_Plugin" method="Activate_Plugin"  pluginName="Controller" >
                  <params>
                    <param tag="callsign" value="DeviceInfo" />
                  </params>
             </testStep>
             <testStep testStepId="6" name="Check_PluginActive_Status" method="Get_Plugin_Status" pluginName="Controller" delay="1" >
                <params>
                  <param tag="plugin" value="DeviceInfo" indexOnly="true" />
                </params>
                <resultGeneration useMethodTag="controller_get_plugin_state" arguments="check_status,DeviceInfo" expectedValues="activated"/>
	     </testStep>
             <testStep testStepId="7" name="Check_State_Change_Event" event="Event_Controller_State_Changed" action="eventListener" delay="2" clear="false">
              <resultGeneration useMethodTag="controller_check_state_change_event" expectedValues="deviceinfo,activated,requested"/>
             </testStep>
             <testStep testStepId="8" name="Check_All_Event" event="Event_Controller_All" action="eventListener" delay="2" >
              <resultGeneration useMethodTag="controller_check_all_event" expectedValues="deviceinfo,activated,requested"/>
             </testStep>
    </testCase>
</testPlugin>

