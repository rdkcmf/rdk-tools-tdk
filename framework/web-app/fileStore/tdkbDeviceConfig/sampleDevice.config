##########################################################################
# If not stated otherwise in this file or this component's Licenses.txt
# file the following copyright and licenses apply:
#
# Copyright 2017 RDK Management
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##########################################################################
#

#This section should have your device name. eg: If device name is RDKB-GW then the below section name and file name needs to be RDKB-GW.config
[sampleDevice.config]

#Setup type can be TDK/WEBPA.
SETUP_TYPE = TDK

################################# 2.4GHZ WIFI DETAILS ######################################

#Unique WIFI 2.4GHZ SSID Name
SSID_2GHZ_NAME = WIFI-2.4

#WIFI 2.4GHZ SSID password
SSID_2GHZ_PWD = wifitest123

#WIFI 2.4GHZ SSID Invalid password
SSID_2GHZ_INVALID_PWD = mywifipassword

#WEBPA WIFI 2.4GHZ SSID index. Index will be 1 for TDK and 10001 for WEBPA
WEBPA_SSID_2GHZ_INDEX = 10001

#WEBPA WIFI 2.4GHZ Radio index. Index will be 1 for TDK and 10000 for WEBPA
WEBPA_RADIO_2GHZ_INDEX = 10000

#TDK WIFI 2.4GHZ SSID index. Index will be 1 for TDK and 10001 for WEBPA
TDK_SSID_2GHZ_INDEX = 1

#TDK WIFI 2.4GHZ Radio index. Index will be 1 for TDK and 10000 for WEBPA
TDK_RADIO_2GHZ_INDEX = 1

#WIFI connection status log. wlan0 should be replaced by your wifi interface name
WLAN_2GHZ_SSID_CONNECT_STATUS = Device 'wlan0' successfully activated

#WIFI disconnection status log. wlan0 should be replaced by your wifi interface name
WLAN_2GHZ_SSID_DISCONNECT_STATUS = Device 'wlan0' successfully disconnected

#WLAN 2.4GHz client's throughput in Mbps while transferring data to WAN
WLAN_2GHZ_THROUGHPUT_TO_WAN =

#WLAN 2.4GHz client's throughput in Mbps while transferring data to another LAN
WLAN_2GHZ_THROUGHPUT_TO_LAN =

#Temporary file in wlan client, to write the throughput data of 2.4GHz frequency
WLAN_2GHZ_THROUGHPUT_OUTFILE =

################################# 5GHZ WIFI DETAILS ######################################

#Unique WIFI 5GHZ SSID Name
SSID_5GHZ_NAME = WIFI-5

#WIFI 5GHZ SSID password
SSID_5GHZ_PWD = wifitest123

#WIFI 5GHZ SSID Invalid password
SSID_5GHZ_INVALID_PWD = mywifipassword

#WEBPA WIFI 5GHZ SSID index. Index will be 2 for TDK and 10101 for WEBPA
WEBPA_SSID_5GHZ_INDEX = 10101

#WEBPA WIFI 5GHZ Radio index. Index will be 2 for TDK and 10100 for WEBPA
WEBPA_RADIO_5GHZ_INDEX = 10100

#TDK WIFI 5GHZ SSID index. Index will be 2 for TDK and 10101 for WEBPA
TDK_SSID_5GHZ_INDEX = 2

#TDK WIFI 5GHZ Radio index. Index will be 2 for TDK and 10100 for WEBPA
TDK_RADIO_5GHZ_INDEX = 2

#WIFI connection status log. wlan1 should be replaced by your wifi interface name
WLAN_5GHZ_SSID_CONNECT_STATUS = Device 'wlan1' successfully activated

#WIFI disconnection status log. wlan1 should be replaced by your wifi interface name
WLAN_5GHZ_SSID_DISCONNECT_STATUS = Device 'wlan1' successfully disconnected

#WLAN 5GHz client's throughput in Mbps while transferring data to WAN
WLAN_5GHZ_THROUGHPUT_TO_WAN =

#WLAN 5GHz client's throughput in Mbps while transferring data to another LAN
WLAN_5GHZ_THROUGHPUT_TO_LAN =

#Temporary file in wlan client, to write the throughput data of 2.4GHz frequency
WLAN_5GHZ_THROUGHPUT_OUTFILE =

################################# Public WIFI DETAILS ######################################

#WIFI connection status log. wlan0 should be replaced by your wifi interface name
WLAN_2GHZ_PUBLIC_SSID_CONNECT_STATUS = Device 'wlan0' successfully activated

#WIFI disconnection status log. wlan0 should be replaced by your wifi interface name
WLAN_2GHZ_PUBLIC_SSID_DISCONNECT_STATUS = Device 'wlan0' successfully disconnected

#WIFI connection status log. wlan1 should be replaced by your wifi interface name
WLAN_5GHZ_PUBLIC_SSID_CONNECT_STATUS = Device 'wlan1' successfully activated

#WIFI disconnection status log. wlan1 should be replaced by your wifi interface name
WLAN_5GHZ_PUBLIC_SSID_DISCONNECT_STATUS = Device 'wlan1' successfully disconnected

#Unique WIFI 2.4GHZ Public SSID Name
SSID_2GHZ_PUBLIC_NAME = xwifi-2.4

#Unique WIFI 5GHZ Public SSID Name
SSID_5GHZ_PUBLIC_NAME = xwifi-5

# Set Device.X_COMCAST-COM_GRE.Tunnel.1.DSCPMarkPolicy
DSCPMARKPOLICY = 44

#Set Device.X_COMCAST-COM_GRE.Tunnel.1.PrimaryRemoteEndpoint
PRIMARY_REMOTE_END_POINT = 68.86.15.199

#Set Device.X_COMCAST-COM_GRE.Tunnel.1.SecondaryRemoteEndpoint
SECONDARY_REMOTE_END_POINT = 68.86.15.171

#WEBPA WIFI 2.4GHZ Public SSID index. Index will be 5 for TDK and 10003 for WEBPA
WEBPA_SSID_2GHZ_PUBLIC_INDEX = 10003

#TDK WIFI 2.4GHZ public SSID index. Index will be 5 for TDK and 10003 for WEBPA
TDK_SSID_2GHZ_PUBLIC_INDEX = 5

#WEBPA WIFI 5GHZ SSID index. Index will be 6 for TDK and 10103 for WEBPA
WEBPA_SSID_5GHZ_PUBLIC_INDEX = 10103

#TDK WIFI 5GHZ SSID index. Index will be 6 for TDK and 10103 for WEBPA
TDK_SSID_5GHZ_PUBLIC_INDEX = 6

############################### Invalid test SSID ##########################################

SSID_INVALID_NAME = TEST_SSID

SSID_INVALID_PWD = rdk@1234

################################# WLAN CLIENT DETAILS ######################################

#Specify the WIFI client machine OS. Currently only UBUNTU is supported
WLAN_OS_TYPE = UBUNTU

#Client IP
WLAN_IP = XX.XX.XX.XX

#Client username
WLAN_USERNAME = username

#Client password
WLAN_PASSWORD = password

#Client ftp username
WLAN_FTP_USERNAME = username

#Client ftp password
WLAN_FTP_PASSWORD = password

#WIFI interface name for 2.4GHZ incase any external wifi adapter is used. Configure interface name based on setup
WLAN_2GHZ_INTERFACE = wlan0

#WIFI interface name for PUBLICWiFi 2.4GHZ incase any external wifi adapter is used. Configure interface name based on setup
WLAN_2GHZ_PUBLIC_SSID_INTERFACE = wlan0

#WLAN client's WIFI interface name for 5GHZ incase any external wifi adapter is used. Configure interface name based on setup
WLAN_5GHZ_INTERFACE = wlan1

#WLAN client's WIFI interface name for PUBLICWiFi 5GHZ incase any external wifi adapter is used. Configure interface name based on setup
WLAN_5GHZ_PUBLIC_SSID_INTERFACE = wlan1

#Invalid interface name
WLAN_INVALID_INTERFACE = NoInt

#Keyword to fetch the WIFI Client's IPv4 address
WLAN_INET_ADDRESS = "inet addr"

#Keyword to fetch the WIFI Client's subnet mask address
WLAN_SUBNET_MASK = "Mask"

#Utility script to be placed in the WIFI Client machine. Configure the script location
WLAN_SCRIPT = /home/user/tdkbE2E_wlan.sh

#Node details for WEBUI scripts.
#The file in which node logs are updating if the node is wlan client
WEBUI_NODE_WLAN_LOGFILE =

#The path in node machine where selenium standalone is downloaded if the node is wlan client
WEBUI_NODE_WLAN_SELENIUM_PATH = 

################################# LAN CLIENT DETAILS ######################################

#Specify the LAN client machine OS. Currently only UBUNTU is supported
LAN_OS_TYPE = UBUNTU

#Client IP
LAN_IP = XX.XX.XX.XX

#Client username
LAN_USERNAME = username

#Client password
LAN_PASSWORD = password

#Client ftp username
LAN_FTP_USERNAME = username

#Client ftp password
LAN_FTP_PASSWORD = password

#Client's ethernet interface name
LAN_INTERFACE = eth0

#Keyword to fetch the LAN Client's IPv4 address
LAN_INET_ADDRESS = "inet addr"

#Keyword to fetch the LAN Client's IPv6 address
LAN_INET6_ADDRESS = "inet6 addr"

#Keyword to fetch the LAN Client's subnet mask address
LAN_SUBNET_MASK = "Mask"

#Utility script to be placed in the LAN Client machine. Configure the script location
LAN_SCRIPT = /home/user/tdkbE2E_lan.sh

#location of the DHCP configuration file
LAN_DHCP_LOCATION = /var/run/

#Keyword to fetch the LAN Client's dhcp lease time
LAN_LEASE_TIME = "dhcp-lease-time"

#Keyword to fetch the LAN Client's DNS server
LAN_DNS_SERVER = "domain-name-servers"

#Keyword to fetch the LAN Client's domain name
LAN_DOMAIN_NAME = "domain-name"

#LAN client's throughput in Mbps while transferring data to WAN
LAN_THROUGHPUT_TO_WAN =

#LAN client's throughput in Mbps while transferring data to another LAN
LAN_THROUGHPUT_TO_WLAN =

#Temporary file in lan client, to write the its throughput data
LAN_THROUGHPUT_OUTFILE =

#Node details for WEBUI scripts.
#The file in which node logs are updating if the node is lan client
WEBUI_NODE_LAN_LOGFILE =

#The path in node machine where selenium standalone is downloaded if the node is lan client
WEBUI_NODE_LAN_SELENIUM_PATH =

################################# WAN CLIENT DETAILS ######################################

#Specify the WAN client machine OS. Currently only UBUNTU is supported
WAN_OS_TYPE = UBUNTU

#Client IP
WAN_IP = XX.XX.XX.XX
WAN_HTTP_IP = XX.XX.XX.XX
WAN_PING_IP = XX.XX.XX.XX
WAN_HTTPS_IP = XX.XX.XX.XX
WAN_FTP_IP = XX.XX.XX.XX

#Client username
WAN_USERNAME = username
WAN_FTP_USERNAME = username

#Client password
WAN_PASSWORD = password
WAN_FTP_PASSWORD = password

#Client's Ethernet interface name
WAN_INTERFACE = eth0

#Keyword to fetch the WAN IPv4 address
WAN_INET_ADDRESS = "inet addr"

#Utility script to be placed in the WIFI Client machine. Configure the script location
WAN_SCRIPT = /home/user/tdkbE2E_wan.sh

#Connection timeout
CONNECTION_TIMEOUT = 30

#Node details for WEBUI scripts.
#The file in which node logs are updating if the node is wan client
WEBUI_NODE_WAN_LOGFILE =

#The path in node machine where selenium standalone is downloaded if the node is wan client
WEBUI_NODE_WAN_SELENIUM_PATH =

#################################NETWORK DETAILS#########################################

# IP to check if internet is accessible or not.
NETWORK_IP = XX.XX.XX.XX

# Port for http service validation. Port to be configured based on your web server installed
HTTP_PORT = 80

# Port for http service validation on WAN client. Port to be configured based on your web server installed
WAN_HTTP_PORT = 80

# Port for http service validation on WLAN client. Port to be configured based on your web server installed
WLAN_HTTP_PORT = 80

# Port for https service validation. Port to be configured based on your web server installed
HTTPS_PORT = 443

#Port for https service validation on WAN client. Port to be configured based on your web server installed
WAN_HTTPS_PORT = 443

#Port for https service validation on WLAN client. Port to be configured based on your web server installed
WLAN_HTTPS_PORT = 443

#https port for remote management
REMOTE_ACCESS_HTTPS_PORT = 8181

#http port for remote management
REMOTE_ACCESS_HTTP_PORT = 8080

#Port for parental control http service validation on WLAN client.
PARENTALCTL_PORT = 80

#Domain name which should be resolved using nslookup
NSLOOKUP_DOMAIN_NAME = www.google.com

#Invalid domain name for nslookup
INVALID_DNS_SERVER = XX.XX.XX.XX

#The URL to test the parental control features
WEBSITE_URL = www.google.com

#This should be the keyword of WEBSITE_URL
WEBSITE_KEYWORD = google

#The URL which is not blocked thorugh parental control
ALLOWED_URL = www.wikipedia.org

#IPV6 address of any public url. eg: google.com
PUBLIC_IPV6_ADDRESS = 2001:4860:4860:0:0:0:0:8888

#BridgeMode status of the device in ethwan mode.Values are Enabled/Disabled
BRIDGEMODE_STATUS = 

#################################CABLE MODEM DETAILS#########################################

# CM Configuration variables are applicable only for Broaband box type and not for RPI/Emulator

# Cable Modem IP type - IPV4/IPV6
CM_IP_TYPE = IPV6

# Cable Modem IP Address - IPV4/IPV6 address
CM_IP = XX.XX.XX.XX

# WAN ip of the gateway device
GW_WAN_IP = XX.XX.XX.XX

####################################TEMPORARY FILE DETAILS################################
#Temporary file in lan client, to write the TCP output
TMP_FILE_LAN = /home/user/tmpLAN.txt

#Temporary file in wlan client, to write the UDP output
TMP_FILE_WLAN = /home/user/tmpWLAN.txt

# File to be transferred  during FTP
FTP_TEST_FILE = Transfer_Test.txt

################### XDNS ####################################
#default DNS server for XDNS testing
XDNS_DNS_SERVER = XX.XX.XX.XX

#Level1 DNS server for XDNS
XDNS_LEVEL1_DNS_SERVER = XX.XX.XX.XX

#Level3 DNS server for XDNS
XDNS_LEVEL2_DNS_SERVER = XX.XX.XX.XX

#Level3 DNS server for XDNS
XDNS_LEVEL3_DNS_SERVER = XX.XX.XX.XX

#default DNS server for XDNS testing
XDNS_IPV6_DNS_SERVER = XX.XX.XX.XX

#Level1 DNS server for XDNS
XDNS_LEVEL1_IPV6_DNS_SERVER = XX.XX.XX.XX

#Level3 DNS server for XDNS
XDNS_LEVEL2_IPV6_DNS_SERVER = XX.XX.XX.XX

#Level3 DNS server for XDNS
XDNS_LEVEL3_IPV6_DNS_SERVER = XX.XX.XX.XX

#Level1 DNS server for XDNS
XDNS_LEVEL1_SECONDARY_DNS_SERVER = XX.XX.XX.XX

#Level3 DNS server for XDNS
XDNS_LEVEL2_SECONDARY_DNS_SERVER = XX.XX.XX.XX

#Level3 DNS server for XDNS
XDNS_LEVEL3_SECONDARY_DNS_SERVER = XX.XX.XX.XX

#Level1 DNS server for XDNS
XDNS_LEVEL1_IPV6_SECONDARY_DNS_SERVER = XX.XX.XX.XX

#Level3 DNS server for XDNS
XDNS_LEVEL2_IPV6_SECONDARY_DNS_SERVER = XX.XX.XX.XX

#Level3 DNS server for XDNS
XDNS_LEVEL3_IPV6_SECONDARY_DNS_SERVER = XX.XX.XX.XX

#Level1 site uri
XDNS_LEVEL1_SITE = ""

#Level2 site uri
XDNS_LEVEL2_SITE = ""

#Level3 site uri
XDNS_LEVEL3_SITE = ""

############################WEBUI############################################################

#Path to tdkbE2E_startHUB.sh in machine where hub should start, eg: /home/TDKB/WEBUI/start_hub_script.sh 
START_HUB_SCRIPT = 

#True if the browser should open with proxy enabled, eg: True
PROXY_ENABLED =

#If proxy enabled, Fill the below proxy credential info 
#Host name eg: "xx.xx.xx.xx"
PROXY_HOST = 

#Port name eg: 8080
PROXY_PORT =

#Proxy credential username eg: ""
PROXY_USERNAME = 

#Proxy credential password eg: ""
PROXY_PASSWORD =

#No proxy field, eg : "10.0.0.1,localhost,127.0.0.1"
NO_PROXY =

#Path to proxy.zip which includes background.js,geckodriver.log
PROXY_PATH =

#Url whcih should open in the browser
GRID_URL = http://10.0.0.1/index.php

#MSO Url whcih should open in the browser
MSO_GRID_URL = 

#The file in which the logs should update in hub machine
WEBUI_LOGFILE = 

#Path in hub machine where selenium-server-standalone-3.141.59.jar is downloaded
WEBUI_HUB_SELENIUM_PATH =

#IP of the hub machine
HUB_MACHINE_IP =

#username of getway UI page
UI_USERNAME =

#MSO Username of UI page
MSO_UI_USERNAME =

#Password of gateway UI page
UI_PASSWORD =

#MSO Password of gateway UI page
MSO_UI_PASSWORD =

#Incorrect Password of gateway UI page
INCORRECT_UI_PASSWORD =

#Default Password of gateway UI page
DEFAULT_UI_PASSWORD =

#Destination address to perform connectivity test
CONNECTIVITY_TEST_DESTINATION_ADDRESS = www.google.com

#Connected lan host name eg: ""
CONNECTED_LAN_HOSTNAME =

#Set of invalid SSID names for the platform
INVALID_SSIDNAMES = 
########################PERFORMANCE########################################################
#time duration in seconds, for performance test cases
PERF_TEST_DURATION =

#polling interval un seconds for performance test cases
PERF_TEST_POLL_INTERVAL =

#the path to rdk-test-tool/logs/logs/ in TDK test manager deployment
TM_LOGS_LOCATION = 
